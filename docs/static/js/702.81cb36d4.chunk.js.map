{"version":3,"file":"static/js/702.81cb36d4.chunk.js","mappings":"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","sources":["admin/libraries.tsx","admin/driver.tsx","admin/admin.tsx","admin/lib-api.ts","utils/icon-button.tsx","../../common/temp/node_modules/.pnpm/@fluentui+react-hooks@8.3.9_b08e3c15324cbe90a6ff8fcd416c932c/node_modules/@fluentui/react-hooks/src/useSetTimeout.ts"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Dialog, DialogType, DialogFooter } from '@fluentui/react/lib/Dialog';\nimport { DefaultButton, PrimaryButton } from '@fluentui/react/lib/Button';\nimport { TextField } from '@fluentui/react/lib/TextField';\nimport { Spinner, SpinnerSize } from '@fluentui/react/lib/Spinner';\n// import { Toggle } from '@fluentui/react/lib/Toggle';\nimport { user_library_data } from 'shared/types/admin';\nimport * as API from \"./lib-api\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt, faPlus, faRedoAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport { useBoolean } from '@fluentui/react-hooks';\n\nconst dialogStyles = { main: { maxWidth: 450 } };\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n`\nconst Table = styled.table`\n    border-collapse: collapse;\n    tr:nth-child(even) {background: #DDD};\n    tr:nth-child(odd) {background: #FFF};\n`\nconst Th = styled.th`\n    border: 1px solid #999;\n    padding: 0.5rem;\n    text-align: left;\n`\nconst Td = styled.td`\n    border: 1px solid #999;\n    padding: 0.5rem;\n    text-align: left;\n`\n\nconst dialogContentProps = {\n    type: DialogType.normal,\n    title: 'Are you sure?',\n    closeButtonAriaLabel: 'Close',\n    subText: 'Are you sure you want to delete this library?',\n}\n\nconst LibraryList: React.FC = () => {\n\n    const [libraries, set_libraries] = useState<user_library_data[]>()\n    const [error, set_error] = useState<string>()\n\n    const fetchLibraries = async () => {\n        const libs = await API.fetch_libraries()\n        set_libraries(libs.sort((a, b) => (a.name < b.name) ? -1 : 1))\n    }\n\n    useEffect(() => {\n        if (typeof libraries === \"undefined\")\n            fetchLibraries()\n    }, [libraries])\n\n    if (typeof libraries === \"undefined\")\n        return (<div><Spinner label=\"Loading Libraries...\" size={SpinnerSize.large} /></div>)\n\n    return (\n        <div>\n            <h2>Library Folders</h2>\n            <Table>\n                <colgroup>\n                    <col style={{ minWidth: \"6rem\" }} />\n                    <col style={{ minWidth: \"20rem\" }} />\n                    <col style={{ width: \"3rem\" }} />\n                </colgroup>\n                <thead>\n                    <tr>\n                        <Th>Name</Th>\n                        <Th>Path</Th>\n                        <Th></Th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {libraries.map((lib, i) => <LibRow lib={lib} key={i} update={fetchLibraries} set_error={set_error} />)}\n                    <AddLibrary update={fetchLibraries} />\n                </tbody>\n            </Table>\n            {error && <p style={{ color: \"red\" }}>error</p>}\n        </div>\n    )\n}\n\nconst REQUIRED = \"Required field\"\nconst AddLibrary: React.FC<{ update: { (): void } }> = ({ update }) => {\n\n    const [active, set_active] = useState(true)\n    const [name, set_name] = useState<string>()\n    const [name_error, set_name_error] = useState<string>()\n    const [path, set_path] = useState<string>()\n    const [path_error, set_path_error] = useState<string>()\n    const [saveError, set_save_error] = useState<string>()\n\n    const onPathChange = useCallback((event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\n        set_path(newValue)\n        set_active(true)\n        if (path_error === REQUIRED && newValue && newValue.length)\n            set_path_error(undefined)\n    }, [set_path, path_error])\n\n    const onNameChange = useCallback((event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\n        set_name(newValue)\n        set_active(true)\n        if (name_error === REQUIRED && newValue && newValue.length)\n            set_name_error(undefined)\n\n    }, [name_error])\n\n    const onAddLibrary = useCallback(async () => {\n        if (!active) { return }\n        if (!path) {\n            set_path_error(REQUIRED)\n        }\n        if (!name) {\n            set_name_error(REQUIRED)\n        }\n        if (!path || !name) {\n            return\n        }\n\n        set_active(false)\n\n        try {\n            await API.save_library({\n                type: \"LIBRARY\",\n                name,\n                path,\n            })\n            set_save_error(undefined)\n        } catch (error) {\n            set_save_error(((error as any).message || \"Something went wrong\"))\n        }\n        update()\n    }, [name, path, active, set_active, update])\n\n    return (\n        <>\n            <tr >\n                <Td><TextField\n                    onChange={onNameChange}\n                    errorMessage={name_error}\n                /></Td>\n                <Td><TextField\n                    onChange={onPathChange}\n                    errorMessage={path_error}\n                /></Td>\n                <Td>\n\n                    <FontAwesomeIcon\n                        style={{ margin: \"0 7px\", color: (active ? \"black\" : \"grey\") }}\n                        icon={faPlus}\n                        title=\"Add\"\n                        onClick={onAddLibrary}\n                    />\n                </Td>\n            </tr>\n            {saveError && <p style={{ color: \"red\" }}>Somethig went wrong while saving: {saveError}</p>}\n\n        </>\n\n    )\n}\n\ninterface RowProps {\n    lib: user_library_data;\n    update: { (): void };\n    set_error: { (x: string): void }\n}\n\nconst LibRow: React.FC<RowProps> = ({ lib, update, set_error }) => {\n\n    const [active, set_active] = useState(true)\n\n    // are you sure dialog\n    const [hideDialog, { toggle: toggleHideDialog }] = useBoolean(true);\n\n    useEffect(() => {\n        return () => set_active(true)\n    }, [set_active, lib])\n\n    const onDelete = useCallback(async () => {\n        if (!active)\n            return\n        set_active(false)\n        await API.delete_library(lib.name)\n        update()\n    }, [lib, active, update])\n\n    const refresh = useCallback(async () => {\n        try {\n            await fetch(`/api/lib/reload/${lib.name}`)\n        } catch (err) {\n            set_error((err as any).message || `Something went wrong while reloading the library ${lib.name}`)\n        }\n    }, [set_error, lib])\n\n    return (\n        <tr >\n            <Td>{lib.name}</Td>\n            <Td>{lib.path}</Td>\n            <Td>\n                <Row>\n                    <FontAwesomeIcon\n                        style={{ margin: \"0 7px\", color: (active ? \"black\" : \"grey\") }}\n                        icon={faRedoAlt}\n                        title=\"Reload\"\n                        onClick={refresh}\n                    />\n                    <FontAwesomeIcon\n                        style={{ margin: \"0 7px\", color: (active ? \"black\" : \"grey\") }}\n                        icon={faTrashAlt}\n                        title=\"Delete\"\n                        onClick={toggleHideDialog}\n                    />\n                </Row>\n            </Td>\n            <Dialog\n                hidden={hideDialog}\n                onDismiss={toggleHideDialog}\n                dialogContentProps={dialogContentProps}\n                modalProps={{ isBlocking: false, styles: dialogStyles, }}\n            >\n                <DialogFooter>\n                    <PrimaryButton onClick={() => { toggleHideDialog(); onDelete() }} text=\"Delete\" />\n                    <DefaultButton onClick={toggleHideDialog} text=\"Cancel\" />\n                </DialogFooter>\n            </Dialog>\n        </tr>\n\n    )\n}\n\n\nexport default LibraryList\n\n\n","import React, { useState, useEffect, useCallback } from 'react';\nimport styled from \"styled-components\"\nimport { Dropdown, IDropdownOption } from '@fluentui/react/lib/Dropdown';\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\nimport { Toggle } from '@fluentui/react/lib/Toggle';\nimport { Label } from '@fluentui/react/lib/Label';\nimport { channel } from 'shared/types/admin';\nimport { IDriver } from 'shared/types/admin';\nimport { IconButton } from '../utils/icon-button';\nimport { faTrashAlt, faPlus } from '@fortawesome/free-solid-svg-icons'\nimport equal from \"fast-deep-equal\"\nimport { Number } from \"../utils/NumberInput\"\nimport { Loading } from \"../App\"\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: Row;\n    gap: 1rem;\n`\n\n\nconst DataRow = styled.div`\n    display: flex;\n    flex-direction: Row;\n    border-radius: 5px;\n    gap: 1rem;\n    padding-left: 12px;\n    padding-right: 12px;\n`\n\nconst PIN_MODE = [\"PWM0\", \"PWM1\", \"PCM_DOUT\", \"SPI0-MOSI\"];\n\nconst Driver: React.FC<{ driver?: IDriver }> = () => {\n\n    const [driver, set_driver] = useState<IDriver>()\n    const [modified, set_modified] = useState(false)\n    // sensible(?) defaults\n    const [dma, set_dma] = useState<number>(10)\n    const [frequency, set_freq] = useState<number>(800000)\n    const [channels, set_channels] = useState<channel[]>([])\n\n    useEffect(() => {\n        console.log(\"Driver mounting\");\n        let canceled = false;\n        (async () => {\n            try {\n                const res = await fetch(\"/ras-lights/api/driver/\")\n                if (canceled) return\n                const driver: IDriver = await res.json()\n                if (canceled) return\n                if (driver === null) {\n                    const ch: channel = {\n                        gpio: PINS[0][0],\n                        count: 1,\n                        brightness: 255,\n                        type: STRIP_TYPE[0],\n                        invert: false,\n                        reverse: false,\n                    }\n                    set_driver({\n                        frequency: 800000, dma: 10, channels: [ch]\n                    })\n                    set_channels([ch])\n                    return\n                }\n                set_driver(driver)\n                set_freq(driver.frequency)\n                if (driver.channels && driver.channels.length) {\n                    set_channels(driver.channels)\n                } else {\n                    const ch: channel = {\n                        gpio: PINS[0][0],\n                        count: 1,\n                        brightness: 255,\n                        type: STRIP_TYPE[0],\n                        invert: false,\n                        reverse: false,\n                    }\n                    set_channels([ch])\n                }\n                set_dma(driver.dma)\n            } catch (err) {\n                console.log(\"dB driver error: \", err)\n            }\n        })()\n        return () => { canceled = true }\n    }, [])\n\n    const update_channel = useCallback((ch: channel, i: number) => {\n        set_channels([...channels!.slice(0, i), ch, ...channels!.slice(i + 1),\n        ])\n    }, [channels])\n\n    useEffect(() => {\n        set_modified(!equal(driver, { frequency, dma, channels }))\n    }, [driver, frequency, dma, channels])\n\n    const save = useCallback(async () => {\n        let canceled = false\n        const driver: IDriver = { frequency, dma, channels }\n        await fetch(\"/ras-lights/api/driver/\", {\n            method: \"POST\",\n            cache: 'no-cache',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(driver)\n        })\n        if (canceled) return\n        set_driver(driver)\n        return () => canceled = true\n    }, [frequency, dma, channels])\n\n    const add = useCallback(() => {\n        const ch: channel = {\n            gpio: PINS[channels.length][0],\n            count: 1,\n            brightness: 255,\n            type: STRIP_TYPE[0],\n            invert: false,\n            reverse: false,\n        }\n        set_channels([...channels, ch])\n    }, [channels])\n\n    const del = useCallback(() => {\n        set_channels(channels.slice(0, -1))\n    }, [channels])\n\n    if (!driver)\n        return (<Loading />)\n\n    return <div>\n        <Row style={{ alignItems: \"flex-end\" }}>\n            <h2>Driver Settings</h2>\n            <p style={{ color: \"grey\" }} ><a href=\"https://github.com/dsyomichev/rpi-ws281x-led#driver-configuration\">See the <span style={{ fontFamily: \"monospace\" }}>rpi-ws281x-led</span> library for details</a></p>\n        </Row>\n        <DataRow>\n            <Number label=\"Frequency\" min={0} value={frequency} onChange={set_freq} />\n            <Number label=\"dma\" value={dma} min={0} onChange={set_dma} />\n            <PrimaryButton\n                label=\"Save\"\n                onClick={save}\n                disabled={!modified}\n                style={{ alignSelf: \"flex-end\", marginLeft: \"auto\" }}>Save</PrimaryButton>\n        </DataRow>\n        <h3 style={{ marginTop: \"1.5rem\" }}>Light Strips</h3>\n        {/* {JSON.stringify(channels)} */}\n        {\n            channels && channels.map((ch, i) => (\n                <DataRow key={i} style={{ backgroundColor: (i % 2 ? \"#dddddd\" : \"none\") }}>\n                    <Channel pins={PINS[i]} channel={ch} onChange={(x) => update_channel(x, i)} />\n                    <div>\n                        <Label>Pin&nbsp;Mode</Label>\n                        <p>{PIN_MODE[i]}</p>\n                    </div>\n                    <div style={{ alignSelf: \"center\", marginLeft: \"auto\" }}>\n                        {i === (channels.length - 1) && i < 3 &&\n                            <IconButton\n                                onClick={add}\n                                title=\"Add Strand\"\n                                // style={{ color: disableSave ? \"#dddddd\" : \"black\" }}\n                                icon={faPlus}\n                            />\n                        }\n                    </div>\n                    <div style={{ alignSelf: \"center\" }}>\n                        {i === (channels.length - 1) && i > 0 &&\n                            <IconButton\n                                onClick={del}\n                                title=\"Delete strand\"\n                                // style={{ color: disableSave ? \"#dddddd\" : \"black\" }}\n                                icon={faTrashAlt}\n                            />\n                        }\n                    </div>\n                </DataRow>\n            ))\n        }\n\n    </div >\n}\n\ninterface IChannel {\n    pins: number[];\n    channel: channel;\n    onChange: (c: channel) => void;\n}\n\nconst Channel: React.FC<IChannel> = ({ pins, channel, onChange }) => {\n\n    const [brightness, set_brightness] = useState<number>(channel.brightness)\n    const [count, set_count] = useState<number>(channel.count)\n    const [gpio, set_gpio] = useState<number>(channel.gpio)\n    const [type, set_type] = useState(channel.type)\n    const [invert, set_invert] = useState<boolean>(channel.invert)\n    const [reverse, set_reverse] = useState<boolean>(channel.reverse)\n\n    useEffect(() => {\n        onChange({ brightness, count, gpio, type, invert, reverse })\n    }, [brightness, count, gpio, type, invert, reverse, onChange])\n\n    useEffect(() => {\n        set_brightness(channel.brightness)\n        set_count(channel.count)\n        set_gpio(channel.gpio)\n        set_type(channel.type)\n    }, [channel])\n\n    return (<>\n        <Dropdown\n            label=\"GPIO\"\n            styles={{ root: { minWidth: \"5rem\", maxWidth: \"5rem\" } }}\n            options={pins.map(m => ({ key: m, text: `${m}` }))}\n            selectedKey={gpio}\n            onChange={\n                (event: React.FormEvent<HTMLDivElement>, option?: IDropdownOption, index?: number) => {\n                    event && option && set_gpio(option.key as number)\n                }\n            }\n        />\n        <Number label=\"Brightness\" value={brightness} min={0} max={255} onChange={set_brightness} />\n        <Number label=\"Count\" value={count} min={0} onChange={set_count} />\n        <Toggle label=\"Invert\" checked={invert} onChange={(e: any, checked?: boolean) => typeof checked !== \"undefined\" && set_invert(checked)} />\n        <Toggle label=\"Reverse\" checked={reverse} onChange={(e: any, checked?: boolean) => typeof checked !== \"undefined\" && set_reverse(checked)} />\n        <Dropdown\n            label=\"Strip Type\"\n            styles={{ root: { minWidth: \"11rem\", maxWidth: \"11rem\" } }}\n            options={STRIP_TYPE.map(m => ({ key: m, text: m }))}\n            selectedKey={type as string}\n            onChange={\n                (event: React.FormEvent<HTMLDivElement>, option?: IDropdownOption, index?: number) => {\n                    option && set_type(option.key)\n                }\n            }\n        />\n    </>)\n}\n\n\n// TODO: move to shared\nconst STRIP_TYPE = [\n    \"WS2811_STRIP_RGB\",\n    \"WS2811_STRIP_RBG\",\n    \"WS2811_STRIP_GBR\",\n    \"WS2811_STRIP_GRB\",\n    \"WS2811_STRIP_BRG\",\n    \"WS2811_STRIP_BGR\",\n    \"K6812_STRIP_RGBW\",\n    \"SK6812_STRIP_RBGW\",\n    \"SK6812_STRIP_GBRW\",\n    \"SK6812_STRIP_GRBW\",\n    \"SK6812_STRIP_BRGW\",\n    \"SK6812_STRIP_BGRW\",\n];\n\n// https://github.com/jgarff/rpi_ws281x/blob/ee7522e3b053950af33bc7e4364742cd3aeaf594/main.c#L266-L273\nconst PINS = [\n    [12, 18, 40, 52],\n    [13, 19, 41, 45, 53],\n    [21, 31],\n    [10, 38],\n]\n\n/*\nconst pin_map = {\n    12: \"PWM0\",\n    18: \"PWM0\",\n    40: \"PWM0\",\n    52: \"PWM0\",\n    13: \"PWM1\",\n    19: \"PWM1\",\n    41: \"PWM1\",\n    45: \"PWM1\",\n    53: \"PWM1\",\n    21: \"PCM_DOUT\",\n    31: \"PCM_DOUT\",\n    10: \"SPI0-MOSI\",\n    38: \"SPI0-MOSI\",\n}\n*/\n\nexport default Driver","import React from 'react';\nimport LibraryList from './libraries';\nimport Driver from \"./driver\"\nimport styled from \"styled-components\"\nimport GeneralSettings from './general';\n\nconst Col = styled.div`\n    display: flex;\n    flex-direction: Column;\n    gap: 1rem;\n    margin: 1rem;\n    max-width: 1000px;\n`\nconst Card = styled.div`\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    padding: 0 1rem 1rem;\n`\n\nconst Admin: React.FC = () => {\n    return <Col>\n        <Card>\n            <GeneralSettings />\n        </Card>\n        <Card>\n            <Driver />\n        </Card>\n\n        <Card style={{ marginBottom: \"2rem\" }}>\n            <LibraryList />\n        </Card>\n    </Col >\n}\n\nexport default Admin","import { user_library_data } from \"shared/types/admin\";\n\nexport async function fetch_libraries(): Promise<user_library_data[]> {\n    const response = await fetch(\"/api/lib/\");\n    return await response.json();\n}\n\nexport async function save_library(lib: user_library_data): Promise<void> {\n    await fetch(\"/api/lib/\", {\n        method: \"POST\",\n        cache: \"no-cache\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(lib),\n    });\n}\n\nexport async function delete_library(name: string): Promise<void> {\n    await fetch(`/api/lib/${name}`, {\n        method: \"DELETE\",\n        cache: \"no-cache\",\n    });\n}\n\nexport async function reload_library(name: string): Promise<void> {\n    const res = await fetch(`/api/lib/reload/${name}`, {});\n    return await res.json();\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons'\n\nconst IconBox = styled.div`\n    width: 2rem;\n    height: 2rem;\n    font-size: 1.2rem;\n    border-radius: 2px;\n    background: grey;\n    padding-top: 0.4rem;\n    box-sizing: border-box;\n`\n\ninterface props {\n    icon: IconDefinition;\n    title?: string;\n    onClick?: () => void;\n    buttonStyle?: any;\n    style?: any;\n    iconStyle?: any;\n}\n\nexport const IconButton: React.FC<props> = ({\n    icon, title, onClick, style, buttonStyle, iconStyle\n}) => (\n    <IconBox\n        onClick={onClick}\n        style={{ ...style, ...buttonStyle }} >\n        <FontAwesomeIcon\n            title={title}\n            style={{\n                margin: \"auto\",\n                display: \"block\",\n                ...style,\n                ...iconStyle\n            }}\n            icon={icon} />\n    </IconBox>\n)","import * as React from 'react';\nimport { useConst } from './useConst';\n\nexport type UseSetTimeoutReturnType = {\n  setTimeout: (callback: () => void, duration: number) => number;\n  clearTimeout: (id: number) => void;\n};\n\n/**\n *  Returns a wrapper function for `setTimeout` which automatically handles disposal.\n */\nexport const useSetTimeout = (): UseSetTimeoutReturnType => {\n  const timeoutIds = useConst<Record<number, number>>({});\n\n  // Cleanup function.\n  React.useEffect(\n    () => () => {\n      for (const id of Object.keys(timeoutIds)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        clearTimeout(id as any);\n      }\n    },\n    // useConst ensures this will never change, but react-hooks/exhaustive-deps doesn't know that\n    [timeoutIds],\n  );\n\n  // Return wrapper which will auto cleanup.\n  return useConst({\n    setTimeout: (func: () => void, duration: number): number => {\n      const id = (setTimeout(func, duration) as unknown) as number;\n\n      timeoutIds[id] = 1;\n\n      return id;\n    },\n\n    clearTimeout: (id: number): void => {\n      delete timeoutIds[id];\n      clearTimeout(id);\n    },\n  });\n};\n"],"names":["dialogStyles","main","maxWidth","Row","styled","Table","Th","Td","dialogContentProps","type","DialogType","title","closeButtonAriaLabel","subText","REQUIRED","AddLibrary","update","useState","active","set_active","name","set_name","name_error","set_name_error","path","set_path","path_error","set_path_error","saveError","set_save_error","onPathChange","useCallback","event","newValue","length","undefined","onNameChange","onAddLibrary","API","message","TextField","onChange","errorMessage","style","margin","color","icon","faPlus","onClick","LibRow","lib","set_error","useBoolean","hideDialog","toggleHideDialog","toggle","useEffect","onDelete","refresh","fetch","faRedoAlt","faTrashAlt","Dialog","hidden","onDismiss","modalProps","isBlocking","styles","DialogFooter","PrimaryButton","text","DefaultButton","libraries","set_libraries","error","fetchLibraries","libs","sort","a","b","Spinner","label","size","SpinnerSize","minWidth","width","map","i","DataRow","PIN_MODE","Channel","pins","channel","brightness","set_brightness","count","set_count","gpio","set_gpio","set_type","invert","set_invert","reverse","set_reverse","Dropdown","root","options","m","key","selectedKey","option","index","value","min","max","Toggle","checked","e","STRIP_TYPE","PINS","driver","set_driver","modified","set_modified","dma","set_dma","frequency","set_freq","channels","set_channels","console","log","canceled","res","json","ch","update_channel","slice","equal","save","method","cache","headers","body","JSON","stringify","add","del","alignItems","href","fontFamily","disabled","alignSelf","marginLeft","marginTop","backgroundColor","x","Label","Col","Card","marginBottom","fetch_libraries","response","save_library","delete_library","IconBox","IconButton","buttonStyle","iconStyle","display","useSetTimeout","timeoutIds","Object","keys","id","clearTimeout","setTimeout","func","duration"],"sourceRoot":""}