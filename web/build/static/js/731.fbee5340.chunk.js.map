{"version":3,"file":"static/js/731.fbee5340.chunk.js","mappings":"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","sources":["admin/lib-api.ts","utils/api.ts","editor/inputs/boolean-input.tsx","editor/inputs/button-input.tsx","editor/inputs/rgbw-input.tsx","editor/inputs/func-input.tsx","editor/inputs/ui-selector.tsx","loader.ts","editor/loop.ts","editor/editor.tsx","editor/inputs/color-input.tsx","editor/inputs/number-input.tsx","ui/button.tsx","ui/toggle.tsx","ui/color.tsx","ui/index.tsx","ui/slider.tsx","ui/utils.ts","utils/icon-button.tsx","../../shared/src/mode.js","../../shared/src/registry.js"],"sourcesContent":["import { user_library_data } from \"shared/types/admin\";\n\nexport async function fetch_libraries(): Promise<user_library_data[]> {\n    const response = await fetch(\"/api/lib/\");\n    return await response.json();\n}\n\nexport async function save_library(lib: user_library_data): Promise<void> {\n    await fetch(\"/api/lib/\", {\n        method: \"POST\",\n        cache: \"no-cache\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(lib),\n    });\n}\n\nexport async function delete_library(name: string): Promise<void> {\n    await fetch(`/api/lib/${name}`, {\n        method: \"DELETE\",\n        cache: \"no-cache\",\n    });\n}\n\nexport async function reload_library(name: string): Promise<void> {\n    const res = await fetch(`/api/lib/reload/${name}`, {});\n    return await res.json();\n}\n","import { show } from \"shared/types/mode\";\n\nexport async function fetch_modes(): Promise<show[]> {\n    const response = await fetch(\"/api/mode/\");\n    return await response.json();\n}\n\nexport async function save_mode(show: show): Promise<void> {\n    await fetch(\"/api/mode/\", {\n        method: \"PUT\",\n        cache: \"no-cache\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(show),\n    });\n}\n\nexport async function delete_mode(name: string): Promise<void> {\n    await fetch(\"/api/mode/\", {\n        method: \"DELETE\",\n        cache: \"no-cache\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name }),\n    });\n}\n\nexport async function set_current_mode(show: show): Promise<void> {\n    await fetch(\"/api/mode/\", {\n        method: \"POST\",\n        cache: \"no-cache\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(show),\n    });\n}\n","\nimport React, { useCallback, useContext } from 'react';\nimport { boolean_input } from \"shared/types/parameters\";\nimport { Toggle } from '@fluentui/react/lib/Toggle';\nimport { EditorContext } from '../editor'; //, pathEquals \n\ninterface props {\n    spec: boolean_input;\n    value: boolean;\n    path: number[];\n}\n\nexport const BooleanOptions: React.FC<props> = ({ spec, value, path }) => {\n\n    const editor = useContext(EditorContext);\n    const onChange = useCallback((val: boolean) => {\n        editor.update_value({ value: val }, path)\n    }, [editor, path])\n\n    return <Toggle\n        label={spec.label}\n        checked={value}\n        onChanged={onChange}\n    />\n}\n\nexport const BooleanValue = BooleanOptions","import React from 'react';\nimport { button_input } from \"shared/types/parameters\";\nimport { button_value } from 'shared/types/mode';\nimport { Label } from '@fluentui/react/lib/Label';\nimport { DefaultButton } from '@fluentui/react/lib/Button';\n\ninterface props {\n    spec: button_input;\n    value: button_value;\n}\nexport const ButtonValue: React.FC<props> = ({ spec, value }) => {\n    return (<>\n        <Label>{spec.label}</Label>\n        <DefaultButton>{value.ui.label}</DefaultButton>\n    </>)\n}\n\n","import React from 'react';\nimport styled from \"styled-components\"\nimport cc from \"color-convert\"\nimport { Label } from '@fluentui/react/lib/Label';\nimport { rgb, rgbw } from 'shared/types/mode';\n\nimport { rgbw_input, rgbw_array_input } from \"shared/types/parameters\"\nimport { sizeBoolean } from '@fluentui/react';\n\nconst WrappedRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: .7rem;\n`\n\nconst Col = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n`\n\nconst SIZE = \"2rem\"\nconst H_SIZE = \"1.2rem\"\n\nexport const HalfColorBox = styled.div.attrs<{ color: string }>(props => ({\n    style: { backgroundColor: props.color }\n}))`\n    height: 1.2rem;\n    width: 2rem;\n    border-style: solid;\n    border-width: 1px;\n    border-radius: 2px;\n    border-color: black;\n`\n\nexport const ColorBox = styled.div.attrs<{ color: string }>(props => ({\n    style: { backgroundColor: props.color }\n}))`\n    height: 2rem;\n    width: 2rem;\n    border-style: solid;\n    border-width: 1px;\n    border-radius: 2px;\n    border-color: black;\n`\n\n// export const ColorBox: React.FC<{ height: string, width: string, color: string } = ({ height, width, color }) => (\n//     <div style={{\n\n//     borderStyle: \"solid\",\n//     borderWidth: \"1px\";\n//     borderRadius: \"2px\";\n//     borderColor: \"black\";\n//     }}/>\n//     height: ${(props) => props.height};\n//     width: ${(props) => props.width};\n//     backgroundColor: #${props => props.color};\n// `\n\n/*\ninterface color_value_props {\n    spec: color_input;\n    value: rgbw;\n}\n\nexport const RGBWValue: React.FC<color_value_props> = ({ spec, value }) => {\n    const w = value[3].toString(16)\n    return (\n        <div\n            style={{\n                display: 'inline-block',\n                margin: \"0 .5rem\",\n            }}>\n            <Label>{spec.label}</Label>\n            <Col>\n                <ColorBox height={H_SIZE} width={SIZE} color={`#${w}${w}${w}`} />\n                <ColorBox height={H_SIZE} width={SIZE} color={cc.rgb.hex(value.slice(0, 3) as rgb)} />\n            </Col>\n        </div>\n    )\n}\n\n*/\n\n\nexport const RGBW: React.FC<{ color: rgbw }> = ({ color }) => {\n    const w = color[3].toString(16)\n    return (\n        <Col>\n            <HalfColorBox color={`#${w}${w}${w}`} />\n            <HalfColorBox color={cc.rgb.hex(color.slice(0, 3) as rgb)} />\n        </Col>\n    )\n}\n\nexport const RGBWArray: React.FC<{ colors: rgbw[] }> = ({ colors }) => {\n    try {\n        return (\n            <WrappedRow >\n                {colors.map((color: rgbw, i) => {\n                    const w = color[3].toString(16)\n                    return (\n                        <Col key={i}>\n                            <HalfColorBox color={`${w}${w}${w}`} />\n                            <HalfColorBox color={cc.rgb.hex(color.slice(0, 3) as rgb)} />\n                        </Col>\n                    )\n                })}\n            </WrappedRow>\n        )\n    } catch (e) {\n        console.log(e)\n        return <>something went wrong</>\n    }\n}\n\ninterface color_value_props {\n    spec: rgbw_input;\n    value: rgbw;\n}\n\nexport const RGBWValue: React.FC<color_value_props> =\n    ({ value: color, spec }) => {\n        return (\n            <>\n                <Label>{spec.label}</Label>\n                <RGBW color={color} />\n            </>\n        )\n    }\n\n\ninterface color_array_value_props {\n    spec: rgbw_array_input;\n    value: rgbw[];\n}\n\n\nexport const RGBWArrayValue: React.FC<color_array_value_props> =\n    ({ value: colors, spec }) => {\n        return (\n            <>\n                <Label>{spec.label}</Label>\n                <RGBWArray colors={colors} />\n            </>\n        )\n    }\n\n","import React, { useContext } from 'react';\nimport styled from \"styled-components\"\nimport useSize from '@react-hook/size'\nimport { BooleanValue } from './boolean-input';\nimport { ButtonValue } from './button-input';\n// import { ButtonInput } from \"./button-input\"\nimport { ColorArrayValue, ColorValue, WArrayValue } from './color-input';\nimport { RGBWArrayValue, RGBWValue } from './rgbw-input';\n\nimport {\n    input,\n    boolean_input,\n    integer_input,\n    range_input,\n    color_input,\n    color_array_input,\n    rgbw_array_input,\n    rgbw_input,\n    number_array_input,\n    button_input,\n    signatures,\n} from \"shared/types/parameters\"\nimport { NumberValue } from './number-input';\nimport { Label } from '@fluentui/react/lib/Label';\nimport { ContextualMenu } from '@fluentui/react/lib/ContextualMenu';\nimport {\n    bool_value, func_config, mode_param,\n    num_value, rgb_array_value, rgbw_array_value,\n    rgbw_value, rgb_value, button_value, num_array_value\n} from \"shared/types/mode\";\nimport { EditorContext, pathEquals } from '../editor';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGift, faTimes } from '@fortawesome/free-solid-svg-icons'\n\n//https://css-tricks.com/almanac/properties/b/box-shadow/\nconst Main = styled.div`\n    margin: .25rem;\n    box-shadow: 0 3px 10px rgb(0 0 0 / 0.2);\n    width: fit-content;\n    padding: 0.6rem;\n    position: relative;\n`\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 1rem;\n    align-items: center;\n`\nconst Box = styled.div`\n    width: 1rem;\n    padding: 2px;\n    border-radius: 2px;\n    background: grey;\n`\n\ninterface props {\n    config: func_config;\n    signatures: signatures;\n    path: number[];\n    // activate: (x: number[]) => void;\n    // Preview: React.FC<{ path: number[] }>;\n}\n\nexport const FuncValue: React.FC<props> = ({ config, signatures, path }) => {\n\n    const editor = useContext(EditorContext);\n    const Preview = editor.get_preview\n    const is_active = pathEquals(editor.active_path, path)\n    const wrappers = editor.getWrappers(path)\n\n\n    const mainRef = React.useRef(null)\n    const menuRef = React.useRef(null)\n    const [mainWidth] = useSize(mainRef)\n    const [menuWidth] = useSize(menuRef)\n\n    const linkRef = React.useRef(null);\n    const [showContextualMenu, setShowContextualMenu] = React.useState(false);\n    const onShowContextualMenu = React.useCallback((ev: React.MouseEvent<HTMLElement>) => {\n        ev.preventDefault(); // don't navigate\n        setShowContextualMenu(true);\n    }, []);\n    const onHideContextualMenu = React.useCallback(() => setShowContextualMenu(false), []);\n\n\n    return (\n        <Main\n            ref={mainRef}\n            style={{ backgroundColor: is_active ? \"#cccccc\" : \"white\" }}\n            onClick={(ev: React.MouseEvent<HTMLElement>) => {\n                ev.preventDefault()\n                ev.stopPropagation()\n                editor.set_active_path(path)\n            }}\n        >\n            <div\n                ref={menuRef}\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    position: \"absolute\",\n                    left: `${mainWidth - menuWidth - 5}px`,\n                    padding: '.4rem',\n                    gap: '.4rem',\n                    borderRadius: \"2px\",\n                    backgroundColor: \"rgba(255,255,255,0.85)\",\n                }}>\n                {wrappers.length > 0 && (\n                    <>\n                        <Box ref={linkRef} onClick={onShowContextualMenu}>\n                            <FontAwesomeIcon\n                                style={{ margin: \"auto\", display: \"block\" }}\n                                icon={faGift} />\n                        </Box>\n                        <ContextualMenu\n                            items={wrappers.map(w => ({ key: w, text: w, onClick: () => { editor.wrap(path, w) } }))}\n                            hidden={!showContextualMenu}\n                            target={linkRef}\n                            onItemClick={onHideContextualMenu}\n                            onDismiss={onHideContextualMenu}\n                        />\n                    </>\n                )}\n                <Box onClick={() => { editor.onClose(path) }}>\n                    <FontAwesomeIcon\n                        style={{ margin: \"auto\", display: \"block\" }}\n                        icon={faTimes} />\n                </Box>\n            </div>\n            <Row>\n                <p><span style={{ color: \"grey\" }}>func: </span> {config.name}</p>\n                <Preview path={path} />\n            </Row>\n            <div\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    gap: \"0.5rem\"\n                }}>{\n                    signatures[config.name].input.map((input, i: number) => {\n                        const value = config.params[input.key];\n                        if (value.type === \"func\") {\n                            return (<div key={i} >\n                                <Label>{input.label}</Label>\n                                <FuncValue\n                                    config={value}\n                                    path={[...path, i]}\n                                    signatures={signatures}\n                                />\n                            </div>\n                            )\n                        }\n                        return (\n                            <Clickable path={[...path, i]} key={i}>\n                                <Parameter\n                                    key={i}\n                                    config={input}\n                                    value={value}\n                                    path={[...path, i]}\n                                />\n                            </Clickable>\n                        )\n                    })}</div>\n        </Main>\n    )\n}\n\nconst Clickable: React.FC<{ path: number[] }> = (props) => {\n\n    const editor = useContext(EditorContext);\n    const is_active = pathEquals(editor.active_path, props.path)\n\n    return <div\n        onClick={(ev: React.MouseEvent<HTMLElement>) => {\n            ev.preventDefault()\n            ev.stopPropagation()\n            editor.set_active_path(props.path)\n        }}\n        style={{\n            backgroundColor: is_active ? \"#cccccc\" : \"transparent\",\n            display: 'inline-block',\n        }}>{props.children}</div>\n\n}\ninterface parameterProps {\n    config: input;\n    value: mode_param;\n    path: number[];\n}\n\nconst NUM_TYPES = [\"number\", \"integer\"]\n\nconst Parameter: React.FC<parameterProps> = ({ config, value, path }) => {\n\n    const editor = useContext(EditorContext);\n    if (!editor.showNumericInputs && NUM_TYPES.indexOf(config.type) !== -1)\n        return null\n\n    switch (config.type) {\n        case \"number\":\n        case \"integer\":\n            return <NumberValue\n                spec={config as integer_input | range_input}\n                value={(value as num_value).value}\n                path={path}\n            />\n\n        case \"boolean\":\n            return <BooleanValue\n                spec={config as boolean_input}\n                value={(value as bool_value).value}\n                path={path}\n            />\n\n        case \"rgb\":\n            return <ColorValue\n                spec={config as color_input}\n                value={(value as rgb_value).value}\n            />\n\n        case \"rgb[]\":\n            return <ColorArrayValue\n                spec={config as color_array_input}\n                value={(value as rgb_array_value).value}\n            />\n        case \"rgbw\":\n            return <RGBWValue\n                spec={config as rgbw_input}\n                value={(value as rgbw_value).value}\n            />\n        case \"rgbw[]\":\n            return <RGBWArrayValue\n                spec={config as rgbw_array_input}\n                value={(value as rgbw_array_value).value}\n            />\n        case \"number[]\":\n            return <WArrayValue\n                spec={config as number_array_input}\n                value={(value as num_array_value).value}\n            />\n\n        case \"button\":\n            return <ButtonValue\n                spec={config as button_input}\n                value={(value as button_value)}\n            />\n        default:\n            let exhaustivenessCheck: never = config;\n            console.log(exhaustivenessCheck);\n            return <></>\n\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { ui_type, ui, ui_slider } from \"shared/types/user-input\";\nimport { num_value, value_instance } from 'shared/types/mode';\nimport { input, integer_input } from 'shared/types/parameters';\nimport { SliderConfig, default_slider_config } from '../../ui/slider';\n\nimport { Dropdown, IDropdownOption, IDropdownStyles } from '@fluentui/react/lib/Dropdown';\nimport { TextField, ITextFieldStyles } from '@fluentui/react/lib/TextField';\nimport equal from \"fast-deep-equal\"\n\nconst textboxStyle: Partial<ITextFieldStyles> = { fieldGroup: { width: \"15rem\" } };\nconst dropdownStyles: Partial<IDropdownStyles> = {\n    dropdown: { width: \"10rem\" },\n};\n\n\nconst NoneOption: IDropdownOption = { key: \"none\", text: \"None\" }\nfunction get_ui_type_options(el: value_instance): IDropdownOption[] {\n    switch (el.type) {\n        case \"rgbw\":\n        case \"rgbw[]\":\n        case \"number[]\":\n            // no pickers for these...\n            return []\n        case \"boolean\":\n        case \"boolean\":\n            return [\n                NoneOption,\n                { key: \"toggle\", text: \"Toggle\" },\n            ]\n        case \"integer\":\n        case \"number\":\n            return [\n                NoneOption,\n                { key: \"slider\", text: \"Slider\" },\n            ]\n        case \"rgb\":\n            return [\n                NoneOption,\n                { key: \"color-picker\", text: \"Color Picker\" },\n            ]\n        case \"rgb[]\":\n            return [\n                NoneOption,\n                { key: \"color[]-picker\", text: \"Color Picker\" },\n            ]\n        case \"button\":\n            return [\n                { key: \"button\", text: \"Button\" },\n            ]\n        default:\n            const checker: never = el\n            console.log(\"something went wrong with checker get_ui_options()\", checker)\n            return []\n    }\n\n}\n\n\nfunction makeid(length: number): string {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\ninterface props {\n    el: value_instance;\n    spec: input;\n    path: number[];\n    onChange: (ui: ui | undefined) => void;\n}\n\n\nconst Selector: React.FC<props> = ({ el, spec, path, onChange }) => {\n\n    const [_el, set_el] = useState<value_instance>()\n    const [_spec, set_spec] = useState<input>()\n    const [dropdown_key, set_dropdown_key] = useState<ui_type | \"none\">(el.ui?.type || \"none\")\n    const [key, _set_key] = useState<string>(() => (el.ui?.key || makeid(8)))\n    const [_label, _set_label] = useState<string>(el.ui?.label || spec?.label || \"\")\n    const [ui_type_options, set_ui_type_options] = useState<IDropdownOption[]>([])\n    // still not extensible...\n    const [slider_options, set_slider_options] = useState<Partial<ui_slider>>()\n\n    useEffect(() => {\n        if (typeof el === \"undefined\" || typeof spec === \"undefined\")\n            return\n        if (el !== _el || spec !== _spec) {\n            try {\n\n                set_el(el)\n                set_spec(spec)\n                set_ui_type_options(get_ui_type_options(el))\n                set_slider_options(default_slider_config(spec, el))\n\n                _set_label((el.ui && el.ui.label) || spec?.label || \"\")\n                _set_key((el.ui && el.ui.key) || spec.key || makeid(8))\n                set_dropdown_key((el.ui && el.ui.type) || \"none\")\n            } catch (err) {\n                console.log(\"something went wrong when updating from the outside\", err)\n                throw err\n            }\n        } else {\n            const val: ui | undefined = (\n                dropdown_key === \"none\" ?\n                    undefined :\n                    {\n                        type: dropdown_key,\n                        label: _label,\n                        key,\n                        path,\n                        default: el.value,\n                        ...slider_options\n                    }\n            )\n            if (!equal(val, el.ui))\n                onChange(val)\n        }\n    }, [el, spec, _el, _spec, dropdown_key, _label, key, slider_options, path, onChange])\n\n\n    return (\n        <>\n            <Dropdown\n                label=\"UI Element\"\n                placeholder=\"Select UI type\"\n                options={ui_type_options}\n                styles={dropdownStyles}\n                selectedKey={dropdown_key}\n                onChange={(\n                    event: React.FormEvent<HTMLDivElement>,\n                    option?: IDropdownOption, index?: number\n                ) => {\n                    if (option) {\n                        set_dropdown_key(option.key as ui_type)\n                    }\n                }\n                }\n            />\n            {el.ui &&\n                <>\n                    <TextField\n                        label=\"Label\"\n                        value={el.ui.label || \"\"}\n                        onChange={(\n                            event: any,\n                            newValue?: string | undefined\n                        ) => _set_label(newValue || \"\")}\n                        styles={textboxStyle}\n                    />\n                    <TextField\n                        label=\"Key\"\n                        value={el.ui.key || \"\"}\n                        onChange={(\n                            event: any,\n                            newValue?: string | undefined\n                        ) => _set_key(newValue || \"\")}\n                        styles={textboxStyle}\n                    />\n                </>\n            }\n\n            {el.ui && el.ui.type === \"slider\" &&\n                <SliderConfig\n                    el={el as num_value}\n                    spec={spec as integer_input}\n                    onChange={set_slider_options} />\n            }\n        </>\n\n    )\n}\n\nexport default Selector\n","import { fetch_libraries } from \"./admin/lib-api\";\nimport { register } from \"shared/src/registry\";\n\ndeclare var __webpack_init_sharing__: { (x: string): Promise<void> };\ndeclare var __webpack_share_scopes__: any;\n\nconst verbose = false;\n\nasync function loadComponent(scope: string, module: string): Promise<library> {\n    // Initializes the share scope. This fills it with known provided modules from this build and all remotes\n    verbose && console.log(`[Module loader] Webpack Init: ${scope}`);\n    await __webpack_init_sharing__(\"default\");\n\n    // @ts-ignore\n    const container: any = window[scope] as any; // or get the container somewhere else\n    // Initialize the container, it may provide shared modules\n    verbose && console.log(`[Module loader] Container Init: ${scope}`);\n    await container.init(__webpack_share_scopes__.default);\n    verbose && console.log(`[Module loader] module.get(): ${scope}`);\n    // @ts-ignore\n    const factory = await window[scope].get(module);\n    verbose && console.log(`[Module loader] factory(): ${scope}`);\n    const Module = factory();\n    verbose && console.log(`[Module loader] \"${scope}\" DONE!!: ${scope}`);\n    verbose &&\n        console.log(`[Module loader] \"${scope}\" module type ${typeof Module}`);\n    verbose &&\n        console.log(\n            `[Module loader] \"${scope}\" module keys  ${Object.keys(Module)}`\n        );\n    return Module as library;\n}\n\nconst loadScript = (url: string): Promise<void> => {\n    return new Promise<void>((resolve, reject) => {\n        const element = document.createElement(\"script\");\n        element.src = url;\n        element.type = \"text/javascript\";\n        element.async = true;\n        document.head.appendChild(element);\n        element.onload = () => {\n            // document.head.removeChild(element);\n            verbose && console.log(`[Script loader] Success: ${url}`);\n            resolve();\n        };\n        element.onerror = () => {\n            console.log(`[Script loader] Failed: ${url}`);\n            document.head.removeChild(element);\n            reject();\n        };\n    });\n};\n\nasync function load_library(name: string) {\n    await loadScript(`/lib/${name}/remoteEntry.js`);\n    return await loadComponent(name, \"./lib\");\n}\n\ninterface library {\n    load: { (x: typeof register): void };\n}\n\nexport async function load_remotes() {\n    const libs = await fetch_libraries();\n    for (let lib of libs) {\n        verbose && console.log(\"=-=-=-=-=-=-=-=-=-=-=-=-=-\");\n        verbose && console.log(`about to load library ${lib.name}`);\n        let mod: library = await load_library(lib.name);\n        verbose && console.log(`loaded library ${lib.name}`);\n        verbose && console.log(`library ${lib.name} is of type ${typeof mod}`);\n        verbose &&\n            console.log(`library ${lib.name} has keys ${Object.keys(mod)}`);\n        mod.load(register);\n        verbose && console.log(`REGISTERED LIBRARY ${lib.name}`);\n    }\n\n    // await Promise.all(\n    //     libs.map(async (lib) => {\n    //         console.log(`about to load library ${lib.name}`);\n    //         const mod: library = await load_library(lib.name);\n    //         console.log(`loaded library ${lib.name}`);\n    //         console.log(`library ${lib.name} is of type ${typeof mod}`);\n    //         console.log(`library ${lib.name} has keys ${Object.keys(mod)}`);\n    //         mod.load(register);\n    //         console.log(`REGISTERED LIBRARY ${lib.name}`);\n    //     })\n    // );\n}\n","import Ajv from \"ajv\";\nimport { build_node } from \"shared/src/mode\";\nimport { globals } from \"shared/src/registry\";\nimport { func_config, rgb, mode } from \"shared/types/mode\";\n\nconst ajv = new Ajv();\nconst schema = {\n    anyOf: [\n        {\n            type: \"array\",\n            items: {\n                type: \"array\",\n                items: { type: \"number\" },\n                minItems: 3,\n                maxItems: 4,\n            },\n        },\n        {\n            type: \"array\",\n            items: { type: \"number\", minimum: 0, maximum: 255 },\n        },\n    ],\n};\n\nexport interface ILoop {\n    start: (x: func_config) => mode;\n    stop: () => void;\n}\n\nconst neurotic_timing_debugging = false;\nconst verbose = false;\n\nexport function make_loop(\n    cb: { (colors: rgb[]): any },\n    globals: { leds: number }\n): ILoop {\n    let timeout: ReturnType<typeof setTimeout>;\n    let prev_loop_end = +new Date();\n\n    const stop = (): void => {\n        console.log(\">> stop\", timeout);\n        typeof timeout !== \"undefined\" && clearTimeout(timeout);\n        console.log(\"cleared ?? \");\n        verbose && console.log(\"Just stopped timeout: \", timeout);\n    };\n\n    const GLOBALS: globals = {\n        ...globals,\n        prev: new Array(globals.leds).fill([[0, 0, 0, 0]]),\n        stop,\n    };\n\n    return {\n        start: (x: func_config) => {\n            verbose && console.log(\"[make loop] About to build node\");\n            verbose && console.log(x, globals);\n            verbose && console.log(\"===========\");\n            const mode = build_node(x, GLOBALS);\n            verbose && console.log(\"[make loop] node built\");\n            timeout && clearTimeout(timeout);\n\n            const fun = () => {\n                let stop = false;\n                GLOBALS.stop = () => {\n                    stop = true;\n                };\n                const start_time = +new Date();\n                const colors = mode();\n                const end_time = +new Date();\n                if (ajv.validate(schema, colors)) {\n                    GLOBALS.prev = colors;\n                    cb(colors);\n                } else {\n                    verbose && console.log(\"canceling!!!\");\n                    return;\n                }\n                neurotic_timing_debugging &&\n                    console.log(\n                        `calc_time: ${(end_time - start_time).toFixed(\n                            3\n                        )} delay time${(start_time - prev_loop_end).toFixed(3)}`\n                    );\n                prev_loop_end = end_time;\n                if (stop) return;\n                timeout = setTimeout(fun, 30);\n            };\n            fun();\n            return mode;\n        },\n        stop,\n    };\n}\n","import React, { useRef, useState, useEffect, createContext, useCallback } from 'react';\nimport styled from \"styled-components\"\nimport cc from \"color-convert\"\nimport copy from \"fast-copy\";\nimport { IconButton } from '../utils/icon-button';\nimport { faCode, faHashtag, faBolt, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { delete_mode, save_mode, fetch_modes } from \"../utils/api\"\nimport { Label } from '@fluentui/react/lib/Label';\nimport { DefaultButton, PrimaryButton } from '@fluentui/react/lib/Button';\nimport {\n    ComboBox,\n    IComboBoxOption,\n    IComboBox,\n    IComboBoxStyles,\n} from '@fluentui/react/lib/ComboBox';\nimport { Dialog, DialogType, DialogFooter } from '@fluentui/react/lib/Dialog';\nimport { useBoolean } from '@fluentui/react-hooks';\nimport { Spinner, SpinnerSize } from '@fluentui/react/lib/Spinner';\n\nimport { ui } from \"shared/types/user-input\";\n\nimport { func_config, mode_param, rgb_array_value, rgb, rgbw, mode, value_instance } from 'shared/types/mode';\nimport {\n    value, signature, signatures, input,\n    color_array_input, color_input,\n    range_input, integer_input, boolean_input\n} from \"shared/types/parameters\"\nimport { FuncValue } from './inputs/func-input';\nimport { WArray, ColorArray, ColorOptions, ColorArrayOptions } from './inputs/color-input';\nimport { RGBWArray, RGBW } from './inputs/rgbw-input';\nimport { BooleanOptions } from './inputs/boolean-input';\nimport { NumberOptions } from './inputs/number-input';\nimport { Dropdown, IDropdownOption } from '@fluentui/react/lib/Dropdown';\n\nimport UISelector from \"./inputs/ui-selector\"\n\nimport { load_remotes } from '../loader';\nimport { make_loop, ILoop } from \"./loop\"\nimport { UI } from '../ui';\n\nconst VALUE_NAMES: value[] = [\"boolean\", \"number\", \"integer\", \"rgb\", \"rgb[]\", \"button\"]\nconst ROOT_TYPES: value[] = [\"rgb[]\", \"rgbw[]\", \"number[]\"]\nconst ACTIVE_COLOR = \"9be2fa\"; //00c6fc\nconst comboBoxStyles: Partial<IComboBoxStyles> = { root: { maxWidth: 300 } };\nconst dialogStyles = { main: { maxWidth: 450 } };\nconst dialogContentProps = {\n    type: DialogType.normal,\n    title: 'Are you sure?',\n    closeButtonAriaLabel: 'Close',\n    subText: 'Are you sure you want to delete this mode?',\n}\n\nconst Header = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 1rem;\n    background-color: #cccccc;\n    padding: 1rem;\n`\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n`\nconst WorkArea = styled.div`\n    padding: 1rem;\n    flex-grow: 1;\n`\nconst OptionsPanel = styled.div`\n    min-width: 20rem;\n    max-width: 20rem;\n    background-color: #cccccc;\n    padding: .8rem;\n`\n\nexport interface descriptor_menu {\n    [key: string]: { name: string, in: input[] }[]\n}\n\nconst rainbow: rgb[] = [0, 1, 2, 3, 4, 5].map(i => cc.hsv.rgb([60 * i, 100, 100,]))\nconst default_show: rgb_array_value = {\n    type: \"rgb[]\",\n    value: rainbow,\n}\n\nconst default_spec: color_array_input = {\n    label: \"Pixel Colors\",\n    key: \"nothing\",\n    type: \"rgb[]\",\n    default: rainbow,\n}\n\nfunction get_preview_at_path(\n    mode: mode,\n    item: mode_param,\n    path: number[],\n    signatures: signatures): [number | boolean | rgb | rgb[] | number[] | rgbw[], input] {\n\n    if (item.type !== \"func\")\n        throw new Error(\"invalid item type\")\n\n    let input: input\n    let _path = path.slice(0, -1)\n\n    while (_path.length) {\n        if (typeof mode !== \"function\") {\n            console.log(\"invalid path (2)\")\n            throw new Error(\"invalid path (2)\")\n        }\n        if (item.type !== \"func\") {\n            throw new Error(\"This should never happen (the previous error should have taken care of it)\")\n        }\n        let i: number = _path.shift()!\n        input = signatures[item.name].input[i]\n        item = item.params[input.key]\n        mode = Object.getOwnPropertyDescriptor(mode.__args__, input.key)!.get! as mode\n    }\n\n    if (item.type !== \"func\") {\n        console.log(\"invalid path (3)\", path, item)\n        throw new Error(\"invalid path (3)\")\n    }\n    input = signatures[item.name].input[path[path.length - 1]]\n    return [mode.__args__[input.key], input]\n}\n\n\nfunction get_item_at_path(\n    item: mode_param,\n    path: number[],\n    signatures: signatures): [mode_param, input | undefined] {\n\n    path = [...path]\n    let input: input | undefined = undefined;\n    while (path.length) {\n        if (item.type !== \"func\")\n            throw new Error(\"invalid path\")\n        let i: number = path.shift()!\n        input = signatures[item.name].input[i]\n        item = item.params[input.key]\n    }\n    return [item, input]\n}\n\nfunction build_fun(name: string, s: signature): func_config {\n    return {\n        type: \"func\",\n        name,\n        // @ts-ignore no (simple) way to check this \n        params: Object.fromEntries(\n            s.input.map(o => [\n                o.key,\n                { type: o.type, value: o.default }\n            ])\n        )\n    }\n}\n\n\nexport function pathEquals(a: number[], b: number[]) {\n    return a.length === b.length &&\n        a.every((val, index) => val === b[index]);\n}\n\ninterface IEditorContext {\n    update_value: (new_value: Partial<mode_param>, path: number[],) => void;\n    set_value: (new_value: mode_param, path: number[],) => void;\n    set_active_path: (path: number[]) => void;\n    get_preview: React.FC<{ path: number[] }>;\n    active_path: number[];\n    onClose: (path: number[]) => void;\n    getWrappers: (path: number[]) => string[];\n    wrap: (path: number[], name: string) => void;\n    showNumericInputs: boolean;\n}\n\nexport const EditorContext = createContext<IEditorContext>({\n    update_value: () => { },\n    set_value: () => { },\n    set_active_path: () => { },\n    get_preview: () => (<p>too early</p>),\n    active_path: [],\n    onClose: () => { },\n    getWrappers: () => [],\n    wrap: () => { },\n    showNumericInputs: false,\n});\n\ninterface editorProps {\n    name?: string;\n    signatures: signatures\n}\nconst FREE_TEXT_KEY = \"__free_text__\"\n\nfunction walk_inputs(\n    x: func_config,\n    signatures: signatures,\n    fun: { (x: value_instance, path: number[]): void },\n    path?: number[],\n) {\n    if (typeof path === \"undefined\")\n        path = []\n\n    for (let [i, input] of signatures[x.name].input.entries()) {\n        let p = x.params[input.key]\n        if (p.type === \"func\") {\n            walk_inputs(p, signatures, fun, [...path, i])\n        } else {\n            fun(p, [...path, i])\n        }\n    }\n}\n\nconst RootPreview: React.FC<{ colors: rgb[] | rgbw[] | number[] | undefined }> = ({ colors }) => {\n    if (!colors || colors === null || colors.length === 0)\n        return <p>too early (no colors)</p>\n    if (typeof colors[0] === \"number\")\n        return <WArray w={colors as number[]} />\n    if (colors[0].length === 3)\n        return <ColorArray colors={colors as rgb[]} />\n    else\n        return <RGBWArray colors={colors as rgbw[]} />\n}\n\nconst Editor: React.FC<editorProps> = ({ signatures }) => {\n\n    // path to the active element\n    const [active_path, set_active_path] = useState<number[]>([])\n    const [show, set_show] = useState<func_config | rgb_array_value>(default_show)\n    const [colors, set_colors] = useState<rgb[] | rgbw[] | number[]>()\n    const [mode, set_mode] = useState<mode>()\n    const [loading, set_loading] = useState(true)\n    const [showNumericInputs, { toggle: toggleShowNumericInputs }] = useBoolean(true)\n    const [show_raw_input, { toggle: toggleShowRawInput }] = useBoolean(false)\n    const [hideDialog, { toggle: toggleHideDialog }] = useBoolean(true);\n    const [live, set_live] = useState(false);\n\n    const [free_text_option, set_free_text_option] = useState<string>()\n    const [nameKey, set_nameKey] = useState<string | number | undefined>()\n    const [existing_modes, set_existing_modes] = useState<IComboBoxOption[]>()\n    const [existing_shows, set_existing_shows] = useState<{ [key: string]: func_config | rgb_array_value }>()\n    const [ui_components, set_ui_components] = useState<ui[]>([])\n    const [generators, set_generators] = useState<string[]>([])\n\n    const [loop] = useState<ILoop>(() => make_loop(set_colors, { leds: 8 }))\n\n    const [loading_libraries, set_loading_libraries] = useState(true)\n    const [loading_libraries_error, set_loading_libraries_error] = useState<string>()\n\n    useEffect(() => {\n        /* on load */\n        let canceled = false;\n        (async () => {\n            try {\n                await load_remotes();\n            } catch (error) {\n                if (canceled) return\n                set_loading_libraries_error((error as any).message || \"Something went wrong\")\n\n\n            } finally {\n                if (canceled) return\n                set_loading_libraries(false)\n            }\n        })()\n        return () => { canceled = true }\n    }, [])\n\n    const set = useCallback((\n        new_value: mode_param,\n        path: number[],\n    ) => {\n        if (path.length === 0) {\n            // special case\n            console.log(\"setting show to new value\", new_value)\n            set_show(new_value as rgb_array_value | func_config)\n            set_active_path([])\n\n            if (new_value.type === \"func\") {\n                console.log(\"re-building\")\n                try {\n                    const mode = loop.start(new_value)\n                    console.log(\"........ loop start returned\", typeof mode, Array.isArray(mode))\n                    set_mode(() => mode)\n                } catch (error) {\n                    console.log(\"bad show:\", new_value)\n                    console.log(\"something went wrong while restarting the loop:\", error)\n                    loop.stop()\n                }\n            } else {\n                loop.stop()\n            }\n            return\n        }\n\n        let old_value: mode_param = get_item_at_path(show, path, signatures)[0]\n\n        // error checking\n        let old_type = old_value.type === \"func\" ? signatures[old_value.name].output : old_value.type\n        let new_type = new_value.type === \"func\" ? signatures[new_value.name].output : new_value.type\n        if (old_type !== new_type)\n            throw new Error(`type of previous value (${old_type}) is not compatible with new value (${new_type})`)\n\n        // update the show\n        let new_show = copy(show)\n        let parent: func_config = get_item_at_path(new_show, path.slice(0, path.length - 1), signatures)[0] as func_config\n        parent.params[signatures[parent.name].input[path[path.length - 1]].key] = new_value\n\n        console.log(\"new_show.type\", new_show.type)\n        if (new_show.type === \"func\") {\n            const mode = loop.start(new_show)\n            set_mode(() => mode)\n        } else {\n            loop.stop()\n        }\n        set_show(new_show)\n        set_active_path(path)\n\n    }, [show, set_show, set_mode, loop, signatures])\n\n    const NameOptions: IComboBoxOption[] = free_text_option ? [\n        { key: FREE_TEXT_KEY, text: free_text_option },\n        ...existing_modes!\n    ] : existing_modes!\n\n    const init = useCallback(\n        async () => {\n            const shows = await fetch_modes()\n            set_existing_modes(shows.map(m => ({ text: m.name, key: m.name })))\n            const entries = shows\n                .map(s => [s.name, s.def as func_config]);\n            const d_shows = Object.fromEntries(entries)\n            set_existing_shows(d_shows)\n            set_loading(false)\n        }\n        , [])\n\n    // useEffect(() => console.log(\"INIT did change\"), [init])\n    // useEffect(() => console.log(\"SET did change\"), [set])\n    // useEffect(() => console.log(\"LOOP did change\"), [loop])\n\n    const globals_ref = useRef<{\n        init: () => void, loop: ILoop, set: (\n            new_value: mode_param,\n            path: number[],\n        ) => void\n    }>({ init, loop, set })\n\n    globals_ref.current.init = init\n    globals_ref.current.loop = loop\n    globals_ref.current.set = set\n\n    useEffect(() => {\n        /* component will mount */\n        globals_ref.current.init();\n        // update_LEDS();\n        globals_ref.current.set(default_show, [])\n\n        const loop = globals_ref.current.loop\n        // component will unmount\n        return function cleanup() {\n            loop.stop();\n            // live && (async () => { await fetch(\"/api/mode/off\"); })()\n        };\n    }, [globals_ref]); // Dont add the dependencies!!! init, set, loop\n\n    const disableSave = (!nameKey) || !(nameKey === FREE_TEXT_KEY ? free_text_option! : (nameKey as string)).length\n\n    const saveShow = useCallback(async () => {\n        const name = nameKey === FREE_TEXT_KEY ? free_text_option! : (nameKey as string)\n        await save_mode({\n            name,\n            def: show,\n            ui: ui_components\n        })\n        init()\n    }, [show, free_text_option, nameKey, ui_components, init])\n\n    const deleteShow = useCallback(async () => {\n        await delete_mode(\n            nameKey === FREE_TEXT_KEY ? free_text_option! : (nameKey as string),\n        )\n        set(default_show, [])\n        init()\n    }, [init, set, free_text_option, nameKey])\n\n    const getWrappers = (path: number[]): string[] => {\n\n        const old_value: func_config = get_item_at_path(show, path, signatures)[0] as func_config\n        const s = signatures[old_value.name]\n        const old_type = s.output\n        return Object.entries(signatures)\n            .filter(e => {\n                const s = e[1]\n                return s.output === old_type && (s.input.filter((p: input) => p.type === old_type).length > 0)\n            }).map(e => e[0]).sort()\n\n    }\n\n    const getUIcomponents = useCallback((p: func_config): ui[] => {\n        const inputs: ui[] = []\n        walk_inputs(p, signatures, (el: value_instance, path: number[]) => {\n            if (typeof el.ui !== \"undefined\")\n                inputs.push(el.ui)\n        })\n        return inputs\n    }, [signatures])\n\n    const onClose = (path: number[]): void => {\n\n        const old_value: func_config = get_item_at_path(show, path, signatures)[0] as func_config\n        const s = signatures[old_value.name]\n        const old_type = s.output\n        const similar_children = s.input.filter((p: input) => p.type === old_type)\n\n        if (similar_children.length) {\n            set((old_value as func_config).params[similar_children[0].key], path)\n        } else {\n            if (active_path.length === 0) {\n                set(default_show, [])\n            } else {\n                const _input = get_item_at_path(show, active_path, signatures)[1]\n                set({\n                    type: _input!.type,\n                    // @ts-ignore no (simple) way to check this \n                    value: _input!.default\n                }, active_path)\n            }\n        }\n    }\n\n    const update_LEDS = useCallback((async () => {\n        if (show.type === \"func\") {\n            // const response =\n            await fetch(\"/api/mode/\", {\n                method: 'POST',\n                cache: 'no-cache',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ name: \"editor\", def: show })\n            });\n        } else {\n            if (!Array.isArray(show.value))\n                return\n            // const response =\n            await fetch(\"/api/mode/off\")\n            await fetch(\"/api/lights/set-colors\", {\n                method: 'POST',\n                cache: 'no-cache',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(show.value)\n            });\n        }\n    }), [show])\n\n    const onLiveChange = useCallback(() => {\n        set_live(!live)\n        if (!live) {\n            update_LEDS()\n        }\n\n    }, [live, update_LEDS, set_live])\n\n    useEffect(() => {\n        live && update_LEDS()\n        if (show.type === \"func\")\n            set_ui_components(getUIcomponents(show))\n    }, [show, live, update_LEDS, set_ui_components, getUIcomponents]);\n\n    const [active_item, active_input] = get_item_at_path(show, active_path, signatures)\n\n    // A list of functions whose outputs are the same as the current item type\n    //const generators: string[] = Object.entries(signatures).filter(e => e[1].output === value_type).map(e => e[0]).sort()\n    useEffect(() => {\n        // working here\n        // working here\n        // working here\n        // working here\n        if (active_path.length === 0) {\n            set_generators(Object.entries(signatures)\n                .filter(e => ROOT_TYPES.indexOf(e[1].output) !== -1)\n                .map(e => e[0]).sort())\n        } else {\n            const value_type: value = active_item.type === \"func\" ? signatures[active_item.name].output : active_item.type as value;\n            set_generators(Object.entries(signatures)\n                .filter(e => e[1].output === value_type)\n                .map(e => e[0]).sort())\n        }\n\n    }, [active_path.length, active_item, signatures])\n\n\n    //     useEffect(() => console.log(\"colors did change\"), [colors])\n    // useEffect(() => console.log(\"mode did change\"), [mode])\n    // useEffect(() => console.log(\"signatures did change\"), [signatures])\n    // useEffect(() => console.log(\"show did change\"), [show])\n    // useEffect(() => console.log(\"RootPreview did change\"), [RootPreview])\n\n\n    const get_preview = useCallback((props: { path: number[] }) => {\n\n        if (props.path.length === 0)\n            return <RootPreview colors={colors} />\n\n        const [data, input] = get_preview_at_path(mode!, show, props.path, signatures)\n\n        switch (input.type) {\n            case \"button\":\n                return <DefaultButton>{data}</DefaultButton>\n            case \"boolean\":\n            case \"number\":\n            case \"integer\": {\n                return (<p>{data}</p>)\n            }\n            case \"rgb\": { return <ColorArray colors={[data as rgb]} /> }\n            case \"rgb[]\": { return <ColorArray colors={data as rgb[]} /> }\n            case \"rgbw[]\": { return <RGBWArray colors={data as rgbw[]} /> }\n            case \"rgbw\": { return <RGBW color={data as rgbw} /> }\n            case \"number[]\": { return <WArray w={data as number[]} /> }\n\n            default: {\n                let exhaustivenessCheck: never = input;\n                console.log(exhaustivenessCheck);\n                // @ts-ignore\n                return (<p>Unknown input type {input.type}</p>)\n            }\n\n\n        }\n    }, [mode, signatures, show, colors])\n\n    const update_value = useCallback((\n        new_value: Partial<mode_param>,\n        path: number[],\n    ) => {\n        let old_value: mode_param = get_item_at_path(show, path, signatures)[0]\n        // @ts-ignore\n        set({ ...old_value, ...new_value }, path)\n\n    }, [show, set, signatures])\n\n    const onDropdownChanged = (event: React.FormEvent<HTMLDivElement>, option?: IDropdownOption) => {\n        console.log(\"A\")\n        if (!option)\n            return\n        console.log(\"B\", option.key)\n        if (option.key === \"constant\") {\n            if (active_path.length === 0) {\n                set(default_show, [])\n            } else {\n                // (active_input is only undefined when path.length === 0)\n                set({\n                    type: active_input!.type,\n                    // @ts-ignore no (simple) way to check this \n                    value: active_input!.default\n                }, active_path)\n            }\n        } else {\n            const func = build_fun(option.key as string, signatures[option.key])\n            console.log('func C', func, active_path)\n            set(func, active_path)\n        }\n    }\n\n    const wrap = (path: number[], name: string): void => {\n\n        const old_value: func_config = get_item_at_path(show, path, signatures)[0] as func_config\n        const s = signatures[old_value.name]\n        // const old_type = s.output\n        let unwrapped = true\n\n        const new_func_config: func_config = {\n            type: \"func\",\n            name,\n            // @ts-ignore no (simple) way to check this \n            params: Object.fromEntries(\n                signatures[name].input.map(o => {\n                    if (unwrapped && o.type === s.output) {\n                        unwrapped = false\n                        return [o.key, old_value]\n                    }\n                    return [o.key, { type: o.type, value: o.default }]\n                })\n            )\n        }\n        console.log('[WRAP] current path', path)\n        console.dir(new_func_config)\n        set(new_func_config, path)\n    }\n\n    const onNameChange = React.useCallback(\n        (event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string): void => {\n            let key = option?.key;\n            if (!option && value) {\n                // If allowFreeform is true, the newly selected option might be something the user typed that\n                // doesn't exist in the options list yet. So there's extra work to manually add it.\n                set_free_text_option(value)\n                set_nameKey(FREE_TEXT_KEY);\n            } else {\n                set_nameKey(key);\n\n                if (existing_shows && typeof key === \"string\" && key !== FREE_TEXT_KEY) {\n                    set(existing_shows[key], [])\n                    // console.log('setting show name', [key])\n                    // console.log('typeof existing', typeof existing_shows)\n                    // console.log('setting show', existing_shows[key])\n                    // set_show(existing_shows[key])\n                    // set_active_path([])\n                }\n            }\n        },\n        [existing_shows, set],\n    );\n\n\n    if (loading || loading_libraries) {\n        return (<div style={{ marginTop: \"2rem\" }}>\n            <Spinner label=\"I am totally loading...\" size={SpinnerSize.large} />\n        </div>)\n    }\n    if (loading_libraries_error) {\n        return (<div>\n            <p>Dang, something went wrong when loading user libraries</p>\n            <p style={{ color: \"red\" }}>{loading_libraries_error}</p>\n        </div>)\n    }\n    return (\n        <EditorContext.Provider value={{\n            set_active_path,\n            get_preview,\n            active_path,\n            set_value: set,\n            update_value,\n            onClose,\n            getWrappers,\n            wrap,\n            showNumericInputs,\n        }}>\n            <Header>\n                <Label>Mode Name</Label>\n                <ComboBox\n                    allowFreeform={true}\n                    autoComplete={'on'}\n                    options={NameOptions}\n                    styles={comboBoxStyles}\n                    selectedKey={nameKey}\n                    onChange={onNameChange}\n                />\n                <div style={{ margin: \"auto\" }}></div>\n                <IconButton\n                    onClick={onLiveChange}\n                    title=\"Use Live Updates\"\n                    style={{ color: live ? ACTIVE_COLOR : \"black\" }}\n                    icon={faBolt}\n                />\n                <IconButton\n                    onClick={toggleShowNumericInputs}\n                    title=\"Show numeric inputs\"\n                    style={{ color: showNumericInputs ? ACTIVE_COLOR : \"black\" }}\n                    icon={faHashtag}\n                />\n                <IconButton\n                    onClick={toggleShowRawInput}\n                    title=\"Show raw data\"\n                    style={{ color: show_raw_input ? ACTIVE_COLOR : \"black\" }}\n                    icon={faCode}\n                />\n                <IconButton\n                    onClick={() => (!disableSave && toggleHideDialog())}\n                    title=\"Delete Show\"\n                    style={{ color: disableSave ? \"#dddddd\" : \"black\" }}\n                    icon={faTrashAlt}\n                />\n\n                <PrimaryButton\n                    onClick={saveShow}\n                    disabled={disableSave}\n                >Save</PrimaryButton>\n            </Header>\n            <Container>\n                <WorkArea>\n                    {show.type === \"func\" ? (\n                        <div>\n                            <FuncValue\n                                config={show}\n                                path={[]}\n                                signatures={signatures}\n                            />\n                        </div>\n                    ) : (<ColorArray colors={show.value} />)}\n                    {ui_components.length > 0 && (\n                        <>\n                            <h3 style={{ marginTop: \"2rem\" }}>UI Components</h3>\n                            <UI ui={ui_components} />\n                            {/* <pre>{JSON.stringify(ui_components, null, 2)}</pre> */}\n                        </>\n                    )}\n                    {show_raw_input &&\n                        <div>\n                            <Label>Raw Data:</Label>\n                            <pre>{JSON.stringify({ def: show, ui: ui_components }, null, 4)}</pre>\n                        </div>\n                    }\n                </WorkArea>\n                <OptionsPanel>\n                    {(generators.length > 0) && <Dropdown\n                        label=\"Input Type\"\n                        selectedKey={active_item.type === \"func\" ? active_item.name : \"constant\"}\n                        // eslint-disable-next-line react/jsx-no-bind\n                        onChange={onDropdownChanged}\n                        placeholder=\"Select an option\"\n                        options={[\"constant\", ...generators].map(s => ({ key: s, text: s }))}\n                    />}\n                    {active_item.type === \"boolean\" && (\n                        <BooleanOptions\n                            value={active_item.value}\n                            spec={active_input as boolean_input}\n                            path={active_path}\n                        />\n                    )}\n                    {(active_item.type === \"number\" || active_item.type === \"integer\") && (\n                        <NumberOptions\n                            value={active_item.value}\n                            spec={active_input as range_input | integer_input}\n                            path={active_path}\n                        />\n                    )}\n                    {active_item.type === \"rgb\" && (\n                        <ColorOptions\n                            value={active_item.value}\n                            spec={active_input as color_input}\n                            path={active_path}\n                        />\n                    )}\n                    {active_item.type === \"rgb[]\" && (\n                        <ColorArrayOptions\n                            value={active_item.value}\n                            spec={active_path.length === 0 ? default_spec : (active_input as color_array_input)}\n                            path={active_path}\n                        />\n                    )}\n                    {VALUE_NAMES.indexOf((active_item as value_instance).type) !== -1 && (\n                        <UISelector\n                            el={active_item as value_instance}\n                            spec={active_input!}\n                            path={active_path}\n                            onChange={\n                                (ui: ui | undefined) =>\n                                    // @ts-ignore\n                                    set({ ...active_item as value_instance, ui }, active_path)\n                            }\n                        />\n                    )}\n\n\n                </OptionsPanel>\n            </Container>\n            <Dialog\n                hidden={hideDialog}\n                onDismiss={toggleHideDialog}\n                dialogContentProps={dialogContentProps}\n                modalProps={{ isBlocking: false, styles: dialogStyles, }}\n            >\n                <DialogFooter>\n                    <PrimaryButton onClick={() => { toggleHideDialog(); deleteShow() }} text=\"Delete\" />\n                    <DefaultButton onClick={toggleHideDialog} text=\"Cancel\" />\n                </DialogFooter>\n            </Dialog>\n        </EditorContext.Provider >\n    )\n};\n\nconst EditorTab: React.FC = () => {\n\n    const [signatures, set_signatures] = useState<signatures>()\n\n    useEffect(() => {\n        if (typeof signatures !== \"undefined\") return\n        let canceled = false;\n        (async () => {\n            try {\n                console.log(\"fetching\")\n                const res = (await fetch(\"/api/registry/descriptors\"));\n                const data: { [key: string]: signature } = await res.json()\n                if (canceled) return\n                set_signatures(data)\n            } catch (err) {\n                console.log(\"erroring\", err)\n            }\n        })()\n        return () => { canceled = true }\n    }, [signatures])\n\n    if (typeof signatures === \"undefined\")\n        return (<div><p>Loading...</p></div>)\n\n    if (Object.keys(signatures).length === 0)\n        return (<div><p>Something went wrong -- no functions available...</p></div>)\n\n    return (<Editor\n        signatures={signatures}\n    />)\n}\n\nexport default EditorTab","import React, { useState, useContext } from 'react';\nimport debounce from \"lodash.debounce\"\nimport { FontIcon } from '@fluentui/react/lib/Icon';\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\nimport styled from \"styled-components\"\nimport cc from \"color-convert\"\nimport {\n    ColorPicker,\n    IColor,\n    IColorPickerStyles,\n} from '@fluentui/react/lib/index';\nimport { Label } from '@fluentui/react/lib/Label';\nimport { rgb } from 'shared/types/mode';\n\nimport { color_input, color_array_input, number_array_input } from \"shared/types/parameters\"\nimport { EditorContext, pathEquals } from '../editor';\n\nconst WrappedRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: .7rem;\n`\n\nconst SIZE = \"2rem\"\nconst CLOSE_SIZE = \"1.1rem\"\nconst CLOSE_FONT_SIZE = \"0.9rem\"\n\nconst ColorBox = styled.div.attrs<{ color: string }>(props => ({\n    style: { backgroundColor: props.color }\n}))`\n    height: 2rem;\n    width: 2rem;\n    border-style: solid;\n    border-width: 1px;\n    border-radius: 2px;\n    border-color: black;\n`\n\n\n\nconst smallIcon = mergeStyles({\n    // fontSize: 15,\n    // height: \"1rem\",\n    // width: \"1rem\",\n    // margin: '0 10px',\n    // left: \"-.75rem\",\n});\nconst largeIcon = mergeStyles({\n    fontSize: \"1.5rem\",\n    // left: \"-.75rem\",\n    // height: 50,\n    // width: 50,\n    // margin: '0 25px',\n});\n\n\nconst colorPickerStyles: Partial<IColorPickerStyles> = {\n    panel: {\n        padding: 0,\n        marginTop: 12,\n        marginBottom: 12,\n    },\n    root: {\n        maxWidth: 352,\n        minWidth: 152,\n    },\n    colorRectangle: { height: 268 },\n};\n\ninterface color_value_props {\n    spec: color_input;\n    value: rgb;\n}\n\nexport const ColorValue: React.FC<color_value_props> = ({ spec, value }) => {\n\n    return (\n        <div\n            style={{\n                display: 'inline-block',\n                margin: \"0 .5rem\",\n            }}>\n            <Label>{spec.label}</Label>\n            <ColorBox color={`#${cc.rgb.hex(value)}`} />\n        </div>\n    )\n}\n\n\nexport const Color: React.FC<{ color: rgb }> = ({ color }) => (\n    <ColorBox color={`#${cc.rgb.hex(color)}`} />\n)\n\ninterface color_input_props {\n    spec: color_input;\n    value: rgb;\n    path: number[];\n}\n\n// <FontIcon aria-label=\"Remove\" iconName=\"Cancel\" className={iconClass} onClick={() => setOpen(false)} />\n\nexport const ColorOptions: React.FC<color_input_props> = ({ value, path, spec }) => {\n\n    const editor = useContext(EditorContext);\n    const is_active = pathEquals(editor.active_path, path)\n\n    return (\n        <div\n            style={{ backgroundColor: is_active ? \"#cccccc\" : \"none\" }}\n        >\n            <Label>{spec.label}</Label>\n            <ColorValuePicker\n                color={value}\n                onChange={(color) => editor.update_value({ value: color }, path)} />\n        </div>\n    )\n}\n\ninterface colorValuePickerProps {\n    onChange: (x: rgb) => void;\n    color: rgb;\n}\n\nexport const ColorValuePicker: React.FC<colorValuePickerProps> = ({ color, onChange }) => {\n\n    const updateColor = React.useCallback(debounce((ev: any, color: IColor) => {\n        onChange([color.r, color.g, color.b,])\n    }, 50),\n        // @ts-ignore\n        [onChange]);\n\n    return (\n        <ColorPicker\n            color={`#${cc.rgb.hex(color)}`}\n            onChange={updateColor}\n            alphaType=\"none\"\n            showPreview={true}\n            styles={colorPickerStyles}\n            // The ColorPicker provides default English strings for visible text.\n            // If your app is localized, you MUST provide the `strings` prop with localized strings.\n            strings={{\n                // By default, the sliders will use the text field labels as their aria labels.\n                // Previously this example had more detailed instructions in the labels, but this is\n                // a bad practice and not recommended. Labels should be concise, and match visible text when possible.\n                hueAriaLabel: 'Hue',\n            }}\n        />\n    )\n}\n\n\nexport const ColorArray: React.FC<{ colors: rgb[] }> = ({ colors }) => {\n    try {\n        return (\n            <WrappedRow >\n                {colors.map((color: rgb, i) => (\n                    <ColorBox key={i} color={`#${cc.rgb.hex(color)}`} />\n                ))}\n            </WrappedRow>\n        )\n    } catch (e) {\n        console.log(e)\n        return <div>something went wrong</div>\n    }\n}\n\nexport const WArray: React.FC<{ w: number[] }> = ({ w }) => {\n    return (<ColorArray colors={w.map(v => [v, v, v])} />)\n}\n\n\nexport const WArrayValue: React.FC<{ spec: number_array_input; value: number[]; }> =\n    ({ value, spec }) => {\n        return (\n            <>\n                <Label>{spec.label}</Label>\n                <ColorArray colors={value.map(v => [v, v, v])} />\n            </>\n        )\n    }\n\n\n\ninterface color_array_value_props {\n    spec: color_array_input;\n    value: rgb[];\n}\n\nexport const ColorArrayValue: React.FC<color_array_value_props> =\n    ({ value: colors, spec }) => {\n        return (\n            <>\n                <Label>{spec.label}</Label>\n                <ColorArray colors={colors} />\n            </>\n        )\n    }\n\ninterface color_array_input_props {\n    spec: color_array_input;\n    value: rgb[];\n    // onChanged: { (x: rgb[]): void };\n    path: number[];\n}\n\nexport const ColorArrayOptions: React.FC<color_array_input_props> = ({ value: colors, spec, path }) => {\n\n    const editor = useContext(EditorContext);\n    const is_active = pathEquals(editor.active_path, path)\n\n    return (\n        <div\n            style={{ backgroundColor: is_active ? \"#cccccc\" : \"tranparent\" }}\n        >\n            <Label>{spec.label}</Label>\n            <ColorArrayPicker\n                colors={colors}\n                onChange={\n                    (value) => editor.update_value({ value }, path)\n                } />\n        </div>\n    )\n}\n\n\n\ninterface colorArrayPickerProps {\n    onChange: (x: rgb[]) => void;\n    colors: rgb[];\n}\n\nexport const ColorArrayPicker: React.FC<colorArrayPickerProps> = ({ colors, onChange }) => {\n\n    const [active_color, set_active_color] = useState(0)\n\n    const addColor = React.useCallback(() => {\n        const value = [\n            ...colors.slice(0, active_color),\n            colors[active_color],\n            ...colors.slice(active_color),\n        ]\n        onChange(value)\n        set_active_color(active_color + 1)\n    }, [onChange, colors, active_color]);\n\n\n    const dropColor = React.useCallback((i: number) => {\n        const value = [\n            ...colors.slice(0, i),\n            ...colors.slice(i + 1),\n        ]\n        onChange(value)\n        if (active_color > i) {\n            set_active_color(active_color - 1)\n        }\n    }, [onChange, colors, active_color]);\n\n    const updateColor = React.useCallback(debounce((ev: any, color: IColor) => {\n        const value: rgb[] = [\n            ...colors.slice(0, active_color),\n            [color.r, color.g, color.b,],\n            ...colors.slice(active_color + 1),\n        ]\n        onChange(value)\n    }, 25), [onChange, colors, active_color]);\n\n    return (<>\n        <WrappedRow>\n            {colors.map((color: rgb, i) => (\n\n                <div\n                    key={i}\n                    style={{ position: \"relative\" }}>\n                    <div\n                        style={{\n                            height: SIZE,\n                            width: SIZE,\n                            backgroundColor: `#${cc.rgb.hex(color)}`,\n                            borderColor: (i === active_color) ? \"red\" : \"black\",\n                            borderStyle: \"solid\",\n                            marginTop: (i === active_color) ? undefined : \"1px\",\n                            borderWidth: (i === active_color) ? \"2px\" : \"1px\",\n                            borderRadius: \"2px\",\n                        }}\n                        onClick={() => set_active_color(i)}\n                    />\n                    <div\n                        style={{\n                            position: \"absolute\",\n                            left: `calc(${SIZE} - ${CLOSE_SIZE} / 2)`,\n                            top: \"-.4rem\",\n                            borderRadius: \"2px\",\n                            borderWidth: \"1px\",\n                            borderColor: \"black\",\n                            backgroundColor: \"#eeeeee\",\n                            width: CLOSE_SIZE,\n                            height: CLOSE_SIZE,\n                            padding: \"1px\",\n                            fontSize: CLOSE_FONT_SIZE\n                        }}\n                        onClick={() => dropColor(i)}\n                    >\n                        <FontIcon\n                            aria-label=\"Remove\"\n                            iconName=\"Cancel\"\n                            className={smallIcon}\n                            style={{\n                                margin: \"auto\",\n                                position: \"relative\",\n                                // top: \"calc(50% - .8rem)\",\n                                top: \"calc(50% - .75rem)\",\n                                display: \"block\",\n                                fontSize: \"1rem\",\n                                width: \"1rem\",\n                            }}\n                        />\n                    </div>\n                </div>\n            ))}\n            <div >\n                <div\n                    style={{\n                        height: SIZE,\n                        width: SIZE,\n                        backgroundColor: \"#eeeeee\",\n                        borderStyle: \"solid\",\n                        marginTop: \"1px\",\n                        borderWidth: \"1px\",\n                        borderRadius: \"2px\",\n                    }}\n                    onClick={() => addColor()}\n                >\n\n                    <FontIcon\n                        aria-label=\"Add\"\n                        iconName=\"Add\"\n                        className={largeIcon}\n                        style={{\n                            margin: \"auto\",\n                            position: \"relative\",\n                            top: \"calc(50% - .8rem)\",\n                            display: \"block\",\n                            fontSize: \"1.2rem\",\n                            width: \"1.2rem\",\n                            // marginTop: \".25rem\",\n                            // marginLeft: \".25rem\",\n                        }}\n                    />\n                </div>\n            </div>\n        </WrappedRow>\n        <ColorPicker\n            color={`#${cc.rgb.hex(colors[active_color])}`}\n            onChange={updateColor}\n            alphaType=\"none\"\n            showPreview={true}\n            styles={colorPickerStyles}\n            // The ColorPicker provides default English strings for visible text.\n            // If your app is localized, you MUST provide the `strings` prop with localized strings.\n            strings={{\n                // By default, the sliders will use the text field labels as their aria labels.\n                // Previously this example had more detailed instructions in the labels, but this is\n                // a bad practice and not recommended. Labels should be concise, and match visible text when possible.\n                hueAriaLabel: 'Hue',\n            }}\n        />\n    </>)\n}\n","import React, { useState, useCallback, useContext, useEffect } from 'react';\nimport { integer_input, range_input } from \"shared/types/parameters\"\nimport { TextField, ITextFieldStyles } from '@fluentui/react/lib/TextField';\nimport { EditorContext } from '../editor';\n\nconst styles: Partial<ITextFieldStyles> = { fieldGroup: { width: \"5rem\" } };\n\nexport const is_int = /^\\d+$/;\nexport const is_number = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\n\ninterface props {\n    spec: integer_input | range_input;\n    value: number;\n    path: number[];\n}\n\nexport const NumberOptions: React.FC<props> = ({ spec, value, path }) => {\n\n    const [_value, set_value] = useState<string | undefined>(value.toString())\n    const { type, label, min, max } = spec;\n    const [errorMessage, setErrorMessage] = useState<string | undefined>()\n\n    const editor = useContext(EditorContext);\n\n    const onChange = useCallback((event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\n\n        set_value(newValue)\n\n        if (typeof newValue === \"undefined\") {\n            editor.update_value({ value: min }, path)\n            setErrorMessage(`Required`)\n            return;\n        }\n\n        if (type === \"integer\" && !is_int.test(newValue))\n            return setErrorMessage(`Value must be an integer`)\n\n        if (type === \"number\" && !is_number.test(newValue))\n            return setErrorMessage(`Value must be a number`)\n\n        if (+newValue < min)\n            return setErrorMessage(`Value must be at least ${min}`)\n\n        if (+newValue > max)\n            return setErrorMessage(`Value must be at most ${max}`)\n\n        //setValue(newValue);\n        editor.update_value({ value: +newValue }, path)\n        setErrorMessage(undefined)\n    }, [min, max, type, editor, path])\n\n    return (\n        <div style={{ display: 'inline-block', margin: \".5rem\" }}>\n            <TextField\n                label={label}\n                value={_value}\n                onChange={onChange}\n                styles={styles}\n                errorMessage={errorMessage}\n            />\n        </div >\n    )\n}\n\nexport const NumberValue = NumberOptions;\n","import React from 'react';\nimport { DefaultButton } from '@fluentui/react/lib/Button';\nimport { generic_ui } from 'shared/types/user-input';\nimport { set_update } from \"./utils\"\n\nexport const Button: React.FC<{ ui: generic_ui }> = ({ ui }) => (\n    <DefaultButton onClick={() => set_update(ui.key, true)}>{\n        ui.label\n    }</DefaultButton >\n)\n","import React from 'react';\nimport { Toggle } from '@fluentui/react/lib/Toggle';\nimport { ui_toggle } from 'shared/types/user-input';\nimport { set_update } from \"./utils\"\n\nexport const ToggleInput: React.FC<{ ui: ui_toggle }> = ({ ui }) => (\n    <Toggle\n        label={ui.label}\n        onChange={(ev, checked?: boolean) => {\n            if (typeof checked !== \"undefined\") set_update(ui.key, checked)\n        }} />\n)","import React, { useContext, useState, useCallback, useEffect } from 'react';\nimport { Color, ColorArray, ColorValuePicker, ColorArrayPicker } from '../editor/inputs/color-input';\nimport { Label } from '@fluentui/react/lib/Label';\nimport { rgb } from 'shared/types/mode';\nimport { ui_rgb, ui_rgb_array } from 'shared/types/user-input';\nimport { ToolContext } from \"./utils\"\nimport { set_update } from \"./utils\"\n\nexport const ColorInput: React.FC<{ ui: ui_rgb }> = ({ ui }) => {\n\n    const [color, setColor] = useState<rgb>(ui.default)\n    const [curr, set_curr] = useState(ui)\n\n    useEffect(() => {\n        // console.log(Object.is(ui, curr))\n        if (Object.is(ui, curr))\n            return\n        set_curr(ui)\n        setColor(ui.default)\n    }, [ui, curr])\n\n    const control = useContext(ToolContext);\n    const setControl = useCallback((ev: React.MouseEvent<HTMLElement>) => {\n        ev.stopPropagation()\n        // @ts-ignore\n        control.setPreview(() => () => {\n            return <>\n                <ColorValuePicker\n                    color={color}\n                    onChange={(c: rgb) => {\n                        set_update(ui.key, c)\n                        setColor(c)\n                    }}\n                />\n            </>\n        })\n    }, [ui, color, control])\n\n    return (\n        <div onClick={setControl}>\n            <Label>{ui!.label}</Label>\n            <Color color={color} />\n        </div>\n    )\n}\n\nexport const ColorArrayInput: React.FC<{ ui: ui_rgb_array }> = ({ ui }) => {\n\n    const [colors, setColors] = useState<rgb[]>(ui.default)\n    const updateColors = useCallback((c: rgb[]) => {\n        set_update(ui.key, c)\n        setColors(c)\n    }, [setColors, ui.key])\n\n    const control = useContext(ToolContext);\n    const setControl = useCallback(() => {\n        // @ts-ignore\n        control.setPreview(() => () =>\n            <ColorArrayPicker\n                colors={colors}\n                onChange={updateColors}\n            />)\n    }, [colors, control, updateColors])\n\n    return (\n        <div onClick={setControl}>\n            <Label>{ui.label}</Label>\n            <ColorArray colors={ui.default} />\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport styled from \"styled-components\"\nimport { Button } from \"./button\";\nimport { ToggleInput } from \"./toggle\"\nimport { SliderInput } from \"./slider\";\nimport { ColorArrayInput, ColorInput } from \"./color\";\nimport { ui, ui_type, ui_rgb, ui_rgb_array, ui_slider, ui_toggle } from 'shared/types/user-input';\nimport { ToolContext } from \"./utils\"\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 1rem;\n    heigth:100%;\n`\nconst OptionsPanel = styled.div`\n    min-width: 20rem;\n    max-width: 20rem;\n    padding: .8rem;\n`\n\nexport const UI: React.FC<{ ui: ui[] }> = ({ ui }) => {\n\n    const [Preview, SetPreview] = useState<null | React.FC>(null)\n\n    return <ToolContext.Provider value={{\n        setPreview: (x) => {\n            SetPreview(x)\n        },\n        clear: () => SetPreview(null),\n    }} >\n        <Row>\n            {ui.map((data: ui, i) =>\n                <div key={i} style={{ margin: 10 }} onClick={() => {\n                    SetPreview(null)\n                }}>\n                    <UI_INSTANCE ui={data} />\n                </div>\n            )}\n            <OptionsPanel>\n                {Preview && <Preview />}\n            </OptionsPanel>\n        </Row>\n    </ToolContext.Provider>\n}\n\n\n\nconst UI_INSTANCE: React.FC<{ ui: ui }> = ({ ui }) => {\n    const type: ui_type = ui.type\n\n    switch (type) {\n        case \"button\":\n            return <Button ui={ui} />\n        case \"color-picker\":\n            return <ColorInput ui={ui as ui_rgb} />\n        case \"color[]-picker\":\n            return <ColorArrayInput ui={ui as ui_rgb_array} />\n        case \"slider\":\n            return <SliderInput ui={ui as ui_slider} />\n        case \"toggle\":\n            return <ToggleInput ui={ui as ui_toggle} />\n        default:\n            const checker: never = type\n            console.log(checker)\n            return <p>Unknown ui type \"{type}\"</p>\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport debounce from \"lodash.debounce\"\nimport { Label } from '@fluentui/react/lib/Label';\nimport { Slider } from '@fluentui/react/lib/Slider';\nimport { int_value, num_value, value_instance } from 'shared/types/mode';\nimport { range_input, integer_input, input } from 'shared/types/parameters';\nimport { ui_slider } from 'shared/types/user-input';\nimport { set_update } from \"./utils\"\n\nexport const SliderInput: React.FC<{ ui: ui_slider }> = ({ ui }) => {\n\n    const onChange = React.useCallback(debounce((value: number) => {\n        set_update(ui.key, value)\n    }, 25), [ui]);\n\n    return (\n        <div style={{ minWidth: 200, maxWidth: 300 }} >\n            <Label>{ui!.label}</Label>\n            <Slider\n                min={ui!.min}\n                max={ui!.max}\n                defaultValue={ui.default}\n                showValue={false}\n                onChange={onChange}\n            />\n        </div>\n    )\n}\n\ninterface ConfigProps {\n    el: int_value | num_value;\n    spec: integer_input | range_input;\n    onChange: (ui: Partial<ui_slider>) => void;\n}\n\nexport function default_slider_config(\n    spec: input,\n    el: value_instance,\n): Partial<ui_slider> {\n\n    if (spec.type === \"number\" || spec.type === \"integer\") {\n        let ui: ui_slider | undefined = el.ui as ui_slider\n        return {\n            max: (ui && typeof ui.max !== \"undefined\") ? ui.max : spec.max,\n            min: (ui && typeof ui.min !== \"undefined\") ? ui.min : spec.min\n        }\n    }\n    return {}\n}\n\nexport const SliderConfig: React.FC<ConfigProps> = ({ el, spec, onChange }) => {\n\n    const [_el, set_el] = useState<value_instance>()\n    const [_spec, set_spec] = useState<input>()\n\n    useEffect(() => {\n        if (el !== _el || spec !== _spec) {\n            set_el(el)\n            set_spec(spec)\n        }\n    }, [el, spec, _el, _spec])\n\n    return (\n        <Slider\n            ranged\n            label=\"Input Range\"\n            min={spec.min}\n            max={spec.max}\n            value={(el.ui && typeof el.ui.max !== \"undefined\") ? el.ui.max : spec.max}\n            lowerValue={(el.ui && typeof el.ui.min !== \"undefined\") ? el.ui.min : spec.min}\n            onChange={(_: unknown, range?: [number, number]) => {\n                if (range)\n                    onChange({ min: range[0], max: range[1] })\n            }}\n        />)\n}\n\n\n","import { createContext, FC } from \"react\";\n\nexport async function set_update(key: string, value: any) {\n    try {\n        const obj = Object.fromEntries([[key, value]]);\n        await fetch(\"/api/ctl/\", {\n            method: \"POST\",\n            cache: \"no-cache\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(obj),\n        });\n    } catch (err) {\n        console.log(\"/api/ctl/ failed with error\", err);\n    }\n}\n\ninterface ItoolContextProps {\n    // get: () => FC;\n    setPreview: (x: FC) => void;\n    clear: () => void;\n}\n\n// let Tool: FC = () => null;\n\nexport const ToolContext = createContext<ItoolContextProps>({\n    // get: () => Tool,\n    setPreview: (x: FC) => {\n        /* pass */\n    }, // (Tool = x),\n    clear: () => () => null,\n});\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons'\n\nconst IconBox = styled.div`\n    width: 2rem;\n    height: 2rem;\n    font-size: 1.2rem;\n    border-radius: 2px;\n    background: grey;\n    padding-top: 0.4rem;\n`\n\ninterface props {\n    icon: IconDefinition;\n    title?: string;\n    onClick?: () => void;\n    buttonStyle?: any;\n    style?: any;\n    iconStyle?: any;\n}\n\nexport const IconButton: React.FC<props> = ({\n    icon, title, onClick, style, buttonStyle, iconStyle\n}) => (\n    <IconBox\n        onClick={onClick}\n        style={{ ...style, ...buttonStyle }} >\n        <FontAwesomeIcon\n            title={title}\n            style={{\n                margin: \"auto\",\n                display: \"block\",\n                ...style,\n                ...iconStyle\n            }}\n            icon={icon} />\n    </IconBox>\n)","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.build_node = void 0;\nconst registry_1 = require(\"./registry\");\nfunction build_node(x, globals) {\n    // console.log(\"[build_node] about to build node: \", JSON.stringify(x));\n    const node = _build_node(x, [\"rgb[]\", \"rgbw[]\", \"number[]\"], globals);\n    // console.log(\"[build_node]  finished building node: \", node);\n    return node;\n}\nexports.build_node = build_node;\nfunction _build_node(x, returnType, globals) {\n    console.log(\"[_build_node] got config: \", x);\n    // get the function and its types from the registry\n    const f = registry_1.registry[x.name];\n    // console.log( \"[_build_node] got config: \", x, \"name:\", x.name, \"exists: \", x.name in registry);\n    if (typeof f === \"undefined\") {\n        console.log(\"throwing\");\n        throw new Error(`Unknown function ${x.name}. Known functions include: ${Object.keys(registry_1.registry).reduce((a, b) => (a === \"\" ? b : `${a}, ${b}`), \"\")}`);\n    }\n    const [func, inputs, value] = f;\n    if (Array.isArray(returnType)) {\n        if (returnType.indexOf(value) === -1)\n            throw new Error(`Expected return type in \"${returnType}\" but registry function ${x.name} returns ${value}`);\n    }\n    else if (returnType !== value) {\n        throw new Error(`Expected return type \"${returnType}\" but registry function ${x.name} returns ${value}`);\n    }\n    const args = {};\n    // iterate over the required inputs\n    for (let param of inputs) {\n        // get the input value\n        let input_value = x.params[param.key];\n        if (typeof input_value === \"undefined\")\n            throw new Error(\"missing input parameter ${param.key}\");\n        switch (input_value.type) {\n            case \"func\": {\n                let func = _build_node(input_value, param.type, globals);\n                Object.defineProperty(args, param.key, { get: func });\n                break;\n            }\n            case \"number\": {\n                switch (param.type) {\n                    case \"integer\":\n                    case \"number\": {\n                        args[param.key] = input_value.value;\n                        break;\n                    }\n                    default: {\n                        throw new Error(`Parameter type ${input_value.type} is not compatible with input type ${param.type}`);\n                    }\n                }\n                break;\n            }\n            case \"boolean\":\n            case \"integer\":\n            case \"button\":\n            case \"number[]\":\n            case \"rgbw\":\n            case \"rgbw[]\":\n            case \"rgb\":\n            case \"rgb[]\": {\n                if (param.type !== input_value.type)\n                    throw new Error(`Parameter type ${input_value.type} is not compatible with input type ${param.type}`);\n                args[param.key] = input_value.value;\n                break;\n            }\n            default: {\n                let exhaustivenessCheck = input_value;\n                console.log(\"exhaustivenessCheck\", exhaustivenessCheck);\n                // @ts-ignore\n                throw new Error(`unknown input type ${input_value.type}`);\n            }\n        }\n    }\n    let out;\n    if (func.length === 0) {\n        out = func.bind(/* this */ {});\n    }\n    else if (func.length === 1) {\n        out = func.bind(/* this */ {}, args);\n    }\n    else {\n        out = func.bind(/* this */ {}, args, globals);\n    }\n    out.__args__ = args;\n    return out;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.get_descriptors = exports.register = exports.setActiveLibrary = exports.registry = void 0;\nconst RESERVED_NAMES = [\"manual\", \"none\"];\nexports.registry = {};\nlet activeLibrary = undefined;\nfunction setActiveLibrary(name) {\n    activeLibrary = name;\n}\nexports.setActiveLibrary = setActiveLibrary;\nfunction register(args) {\n    let { name, func, input, output } = args;\n    if (RESERVED_NAMES.indexOf(name) !== -1)\n        throw new Error(`Reserved name ${name}`);\n    //if (typeof activeLibrary !== \"undefined\") name = `${activeLibrary}/${name}`;\n    console.log(`REGISTER: adding function (${Object.keys(exports.registry).length}) ${activeLibrary ? activeLibrary : \"internal\"}/${name}`);\n    if (name in exports.registry)\n        console.log(`WARNING: overwriting existing registry function ${name}`);\n    exports.registry[name] = [func, input, output];\n}\nexports.register = register;\nfunction get_descriptors() {\n    const out = {};\n    for (const [key, value] of Object.entries(exports.registry))\n        out[key] = { input: value[1], output: value[2] };\n    return out;\n}\nexports.get_descriptors = get_descriptors;\n"],"names":["fetch_libraries","fetch","response","json","save_library","lib","method","cache","headers","body","JSON","stringify","delete_library","name","fetch_modes","save_mode","show","delete_mode","BooleanOptions","spec","value","path","editor","useContext","EditorContext","onChange","useCallback","val","update_value","Toggle","label","checked","onChanged","BooleanValue","ButtonValue","Label","DefaultButton","ui","WrappedRow","styled","Col","HalfColorBox","props","style","backgroundColor","color","RGBW","w","toString","cc","slice","RGBWArray","colors","map","i","e","console","log","RGBWValue","RGBWArrayValue","Main","Row","Box","FuncValue","config","signatures","Preview","get_preview","is_active","pathEquals","active_path","wrappers","getWrappers","mainRef","React","menuRef","useSize","mainWidth","menuWidth","linkRef","showContextualMenu","setShowContextualMenu","onShowContextualMenu","ev","preventDefault","onHideContextualMenu","ref","onClick","stopPropagation","set_active_path","display","flexDirection","position","left","padding","gap","borderRadius","length","margin","icon","faGift","ContextualMenu","items","key","text","wrap","hidden","target","onItemClick","onDismiss","onClose","faTimes","input","params","type","Clickable","Parameter","children","NUM_TYPES","showNumericInputs","indexOf","exhaustivenessCheck","textboxStyle","fieldGroup","width","dropdownStyles","dropdown","NoneOption","makeid","result","characters","charactersLength","charAt","Math","floor","random","el","useState","_el","set_el","_spec","set_spec","dropdown_key","set_dropdown_key","_set_key","_label","_set_label","ui_type_options","set_ui_type_options","slider_options","set_slider_options","useEffect","checker","get_ui_type_options","default_slider_config","err","undefined","default","equal","Dropdown","placeholder","options","styles","selectedKey","event","option","index","TextField","newValue","loadComponent","scope","module","__webpack_init_sharing__","container","window","init","__webpack_share_scopes__","get","factory","Module","loadScript","url","Promise","resolve","reject","element","document","createElement","src","async","head","appendChild","onload","onerror","removeChild","load_library","load_remotes","libs","load","register","ajv","Ajv","schema","anyOf","minItems","maxItems","minimum","maximum","VALUE_NAMES","ROOT_TYPES","ACTIVE_COLOR","comboBoxStyles","root","maxWidth","dialogStyles","main","dialogContentProps","DialogType","title","closeButtonAriaLabel","subText","Header","Container","WorkArea","OptionsPanel","rainbow","default_show","default_spec","get_item_at_path","item","Error","shift","a","b","every","createContext","set_value","FREE_TEXT_KEY","walk_inputs","x","fun","entries","p","RootPreview","Editor","set_show","set_colors","mode","set_mode","loading","set_loading","useBoolean","toggleShowNumericInputs","toggle","show_raw_input","toggleShowRawInput","hideDialog","toggleHideDialog","live","set_live","free_text_option","set_free_text_option","nameKey","set_nameKey","existing_modes","set_existing_modes","existing_shows","set_existing_shows","ui_components","set_ui_components","generators","set_generators","cb","globals","Date","timeout","stop","clearTimeout","GLOBALS","prev","Array","leds","fill","start","build_node","validate","setTimeout","make_loop","loop","loading_libraries","set_loading_libraries","loading_libraries_error","set_loading_libraries_error","canceled","message","set","new_value","old_value","old_type","output","new_type","new_show","copy","parent","isArray","error","NameOptions","shows","m","s","def","d_shows","Object","fromEntries","globals_ref","useRef","current","disableSave","saveShow","deleteShow","getUIcomponents","inputs","push","update_LEDS","onLiveChange","active_item","active_input","filter","sort","value_type","_path","getOwnPropertyDescriptor","__args__","get_preview_at_path","data","onNameChange","marginTop","Spinner","size","SpinnerSize","Provider","similar_children","_input","unwrapped","new_func_config","o","dir","ComboBox","C","allowFreeform","autoComplete","faBolt","faHashtag","faCode","faTrashAlt","PrimaryButton","disabled","UI","func","Dialog","modalProps","isBlocking","DialogFooter","set_signatures","res","keys","SIZE","CLOSE_SIZE","ColorBox","smallIcon","mergeStyles","largeIcon","fontSize","colorPickerStyles","panel","marginBottom","minWidth","colorRectangle","height","ColorValue","Color","ColorOptions","ColorValuePicker","updateColor","debounce","r","g","alphaType","showPreview","strings","hueAriaLabel","ColorArray","WArray","v","WArrayValue","ColorArrayValue","ColorArrayOptions","ColorArrayPicker","active_color","set_active_color","addColor","dropColor","borderColor","borderStyle","borderWidth","top","iconName","className","is_int","is_number","NumberOptions","_value","min","max","errorMessage","setErrorMessage","test","NumberValue","Button","set_update","ToggleInput","ColorInput","setColor","curr","set_curr","is","control","ToolContext","setControl","setPreview","c","ColorArrayInput","setColors","updateColors","SetPreview","clear","UI_INSTANCE","SliderInput","defaultValue","showValue","SliderConfig","ranged","lowerValue","_","range","obj","IconBox","IconButton","buttonStyle","iconStyle","exports","registry_1","require","_build_node","returnType","f","registry","reduce","out","args","param","input_value","defineProperty","bind","get_descriptors","setActiveLibrary","RESERVED_NAMES","activeLibrary"],"sourceRoot":""}